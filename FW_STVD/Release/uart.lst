RCSTM8 COMPILER V2.28.10.092,  UART               09/21/18  13:57:46

QCW(0x00963FA0)

RCSTM8 COMPILER V2.28.10.092, COMPILATION OF MODULE UART      
OBJECT MODULE PLACED IN Release\uart.o
COMPILER INVOKED BY: OBJECT(Release\uart.o) PIN(C:\Program Files (x86)\Raisonance\Ride\inc\STM8) PIN(C:\Program Files (x86)\Raisonance\Ride\inc\ST7) PIN(C:\Program Files (x86)\Raisonance\Ride\inc) DGC(page0) AUTO WRV(0) PR(Release\uart.lst) CD CO SB OT(7,SIZE) STM8(SMALL) 

stmt level    source
   1          #include "uart.h"
   2          #include "uart_reg.h"
   3          #include "commands.h"
   4          #include "gpio.h"
   5          
   6          BYTE temp;
   7          
   8          void initUART(void);
   9          void putstr (const char *Addr);
  10          void putpack (BYTE c);
  11          void clearRxBuff(void);
  12          void rec_pref(void);
  13          void checktuneprefix (void);
  14          void rec_addr(void);
  15          void rec_ident(void);
  16          void rec_command(void);
  17          void checktunetable(void);
  18          void rec_param(void);
  19          void nocommand(void);
  20          
  21          BYTE data RxBuffer[RXBUFFERSIZE];
  22          BYTE data TxBuffer[TXBUFFERSIZE];
  23          BYTE Comm_Len;
  24          BYTE RxStatus;
  25          BYTE RxCount;
  26          BYTE plen;
  27          BYTE data TxCount;
  28          BYTE data TxPointer;
  29          BYTE data RxPointer;
  30          bit TxBusy;
  31          
  32          void initUART(void)
  33          {	
  34   1      	//DE = 0;
  35   1      	//SYSCFG_RMPCR1 &= 0b11011111;
  36   1      	SYSCFG_RMPCR1 = 0x2C;
  37   1      	
  38   1      	//set baud rate 115200 bps at FCPU=16 MHz
  39   1      	USART1_BRR2 = 0x1; //0x0 ;
  40   1      	USART1_BRR1 = 0x34;// 0x24;
  41   1      	USART1_CR1 = 0;
  42   1      	USART1_CR2 = 0b01101100;
  43   1      	USART1_CR3 = 0b00000000;
  44   1      	USART1_CR4 = 0;
  45   1      	USART1_CR5 = 0;
  46   1      	clearRxBuff();
  47   1      	TxPointer=0;
  48   1      }
  49          
  50          
  51          void putstr (const char *Addr)
  52          {
  53   1      	BYTE i=0;
  54   1      	while (*Addr !=0)
  55   1      		{
  56   2      		TxBuffer[i]=*Addr;
  57   2      		i++;
  58   2      		Addr++;
  59   2      		}
  60   1      					
  61   1      	//i++;
  62   1      	TxBuffer[i]=0x0D;
  63   1      	i++;
  64   1      	TxBuffer[i]=0x0A;
  65   1      	putpack(i);
  66   1      }
  67          
  68          
  69          void putpack (BYTE c)
  70          {	while (TxBusy);
  71   1      	TxPointer = 0;
  72   1      	TxCount = c;
  73   1      	DE_set(1); //switch driver to transmit
  74   1      	USART1_DR = TxBuffer[0];
  75   1      	TxBusy = 1;
  76   1      }
  77          
  78          
  79          
  80          void clearRxBuff(void)
  81          
  82          {
  83   1      	RxPointer=0;
  84   1      	RxBuffer[0]=0;
  85   1      	F_Comm=0;
  86   1      	RxStatus = 0;
  87   1      }
  88          
  89          //USART interrupts
  90          void USART1_TX_Interrupt() interrupt 27		
  91          
  92          	{
  93   1      	 if (TC)
  94   1      	 {TC=0;
  95   2      	 if (TxPointer < TxCount)  	// it's end?
  96   2       		{
  97   3      		TxPointer++;			// next byte
  98   3      		USART1_DR = TxBuffer[TxPointer];	// put next byte from buffer
  99   3      		}
 100   2      	 else 
 101   2      	 {
 102   3      		TxCount=0;
 103   3      		TxPointer=0;
 104   3      		DE_set(0);
 105   3      		TxBusy=0;//transmitter free
 106   3      	 }
 107   2       }
 108   1      
 109   1      	}
 110          void USART1_RX_Interrupt() interrupt 28	
 111          {
 112   1      		//static BYTE plen;
 113   1      		
 114   1      		if (RXNE)
 115   1      		{
 116   2      		
 117   2      		RXNE=0;
 118   2      		temp = USART1_DR;
 119   2      		switch (RxStatus)
 120   2      		{
 121   3      			case 0://nothing received
 122   3      			rec_pref();
 123   3      			break;
 124   3      			
 125   3      			case 1://prefix received
 126   3      			rec_addr();
 127   3      			break;
 128   3      			
 129   3      			case 2://address received
 130   3      			rec_command();
 131   3      			break;
 132   3      			
 133   3      			case 3://command received
 134   3      			rec_param();
 135   3      			break;
 136   3      			
 137   3      			case 4://tuning prefix received
 138   3      			rec_ident();
 139   3      			break;
 140   3      			
 141   3      			case 5://command not executed, nothing to do
 142   3      			break;
 143   3      			
 144   3      			default:
 145   3      			nocommand();
 146   3      			break;
 147   3      					
 148   3      		}
 149   2      		}
 150   1      }		
 151          
 152          void rec_pref(void)
 153          	{
 154   1      		if (TuneMode) checktuneprefix();
 155   1      		else
 156   1      			{
 157   2      				if (temp == RXPREFIX)
 158   2      				{
 159   3      					RxBuffer[RxPointer] = temp;
 160   3      					RxPointer++;
 161   3      					RxStatus = 1;
 162   3      				}
 163   2      				
 164   2      				else
 165   2      				{
 166   3      					if (temp == TUNEPREFIX)
 167   3      					{
 168   4      						RxBuffer[RxPointer] = temp;
 169   4      						RxPointer++;
 170   4      						RxStatus = 4;
 171   4      					}
 172   3      					else nocommand();
 173   3      				}
 174   2      			}
 175   1      	}
 176          			
 177          void checktuneprefix (void)
 178          	{
 179   1      		if (temp == TUNEPREFIX)
 180   1      		{
 181   2      			RxBuffer[RxPointer] = temp;
 182   2      			RxPointer++;
 183   2      			RxStatus = 1;
 184   2      		}
 185   1      		else nocommand();
 186   1      	}
 187          
 188          void rec_addr(void)
 189          {
 190   1      	RxBuffer[RxPointer] = temp;
 191   1      	RxPointer++;
 192   1      	RxStatus = 2;
 193   1      }
 194          
 195          void rec_ident(void)
 196          {
 197   1      	if (temp == IDENT)
 198   1      	{
 199   2      		RxBuffer[RxPointer] = temp;
 200   2      		RxPointer++;
 201   2      		RxStatus = 2;
 202   2      	}
 203   1      }
 204          
 205          void rec_command(void)
 206          {
 207   1      	if (TuneMode) checktunetable();
 208   1      	else
 209   1      	{
 210   2      		BYTE i = 0;
 211   2      		while ((COMMANDLIST[i] != 0))
 212   2      				{
 213   3      				 if (temp == COMMANDLIST[i])
 214   3      				 {
 215   4      				 	plen = COMMANDLIST[i+1];
 216   4      					RxCount = plen-3;
 217   4      					RxBuffer[RxPointer] = temp;
 218   4      					RxPointer++;
 219   4      					RxStatus = 3;
 220   4      					break;
 221   4      				 }
 222   3      				 else i += 2;
 223   3      				 
 224   3      				}
 225   2      			if 	(RxStatus != 3) 
 226   2      			{
 227   3      			//plen = 0;
 228   3      			RxCount = 0;
 229   3      			clearRxBuff(); //command not found
 230   3      			}
 231   2      			
 232   2      	}
 233   1      }
 234          
 235          void checktunetable(void)
 236          {
 237   1      	BYTE i = 0;
 238   1      		while ((TUNELIST[i] != 0))
 239   1      				{
 240   2      				 if (temp == TUNELIST[i])
 241   2      				 {
 242   3      				 	plen = TUNELIST[i+1];
 243   3      					RxCount = plen-3;
 244   3      					RxBuffer[RxPointer] = temp;
 245   3      					RxPointer++;
 246   3      					RxStatus = 3;
 247   3      					break;
 248   3      				 }
 249   2      				 else i += 2;
 250   2      				 
 251   2      				}
 252   1      			if 	(RxStatus != 3) 
 253   1      			{
 254   2      			//plen = 0;
 255   2      			RxCount = 0;
 256   2      			clearRxBuff(); //command not found
 257   2      			}
 258   1      }
 259          
 260          void rec_param(void)
 261          {
 262   1      			RxBuffer[RxPointer] = temp;
 263   1      			RxPointer++;
 264   1      			RxCount--;
 265   1      			if (RxCount ==0)
 266   1      			{			
 267   2      			RxStatus = 5; 
 268   2      			Comm_Len = plen-1;
 269   2      			}
 270   1      			
 271   1      }
 272          
 273          void nocommand(void)
 274          {
 275   1      	F_Comm = 0;
 276   1      	RxCount = 0;
 277   1      	//RxStatus = 0;
 278   1      	clearRxBuff();
 279   1      }
 280          
 281          
 282          
RCSTM8 COMPILER V2.28.10.092
ASSEMBLY LISTING OF GENERATED OBJECT CODE

              ; FUNCTION ?initUART (BEGIN)
              ; SOURCE LINE # 36 
0000 352C509E                          MOV    SYSCFG_RMPCR1,#02CH
              ; SOURCE LINE # 39 
0004 35015233                          MOV    USART1_BRR2,#001H
              ; SOURCE LINE # 40 
0008 35345232                          MOV    USART1_BRR1,#034H
              ; SOURCE LINE # 41 
000C 725F5234                          CLR    USART1_CR1
              ; SOURCE LINE # 42 
0010 356C5235                          MOV    USART1_CR2,#06CH
              ; SOURCE LINE # 43 
0014 725F5236                          CLR    USART1_CR3
              ; SOURCE LINE # 44 
0018 725F5237                          CLR    USART1_CR4
              ; SOURCE LINE # 45 
001C 725F5238                          CLR    USART1_CR5
              ; SOURCE LINE # 46 
0020 CD0000     F                      CALL   ?clearRxBuff
              ; SOURCE LINE # 47 
0023 725F0000   F                      CLR    TxPointer
0027 81                                RET    

              ; FUNCTION ?initUART (END)

              ; FUNCTION ?putstr (BEGIN)
              ; Register XW is assigned to parameter Addr
              ; SOURCE LINE # 53 
0000 4B00                              PUSH   #000H
0002         ?WHILE_0001:
              ; SOURCE LINE # 54 
0002 7D                                TNZ    (X)
0003 2710                              JREQ   ?NXT_0001
              ; SOURCE LINE # 56 
0005 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0007 905F                              CLRW   Y
0009 9097                              LD     YL,A
000B F6                                LD     A,(X)
000C 90D70020   F                      LD     (TxBuffer + 00H,Y),A
              ; SOURCE LINE # 57 
0010 0C01       F                      INC    (001H,SP)   ; [ i ]
              ; SOURCE LINE # 58 
0012 5C                                INCW   X
0013 20ED                              JRA    ?WHILE_0001
0015         ?NXT_0001:
              ; SOURCE LINE # 62 
0015 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0017 5F                                CLRW   X
0018 97                                LD     XL,A
0019 A60D                              LD     A,#00DH
001B D70020     F                      LD     (TxBuffer + 00H,X),A
              ; SOURCE LINE # 63 
001E 0C01       F                      INC    (001H,SP)   ; [ i ]
              ; SOURCE LINE # 64 
0020 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0022 97                                LD     XL,A
0023 A60A                              LD     A,#00AH
0025 D70020     F                      LD     (TxBuffer + 00H,X),A
              ; SOURCE LINE # 65 
0028 7B01       F                      LD     A,(001H,SP)   ; [ i ]
002A CD0000     F                      CALL   ?putpack
002D 84                                POP    A
002E 81                                RET    
              ; Addr         pointer to (unsigned char   in  const)(size=2). Register parameter(XW) in PAGE0
              ; i            unsigned char  (size=1). Automatic variable  in AUTO

              ; FUNCTION ?putstr (END)

              ; FUNCTION ?putpack (BEGIN)
              ; Register-parameter c (A) is relocated (auto)
              ; SOURCE LINE # 69 
0000 88                                PUSH   A
0001         ?WHILE_0003:
              ; SOURCE LINE # 70 
0001 72000000FB F                      BTJT   TxBusy,?WHILE_0003
              ; SOURCE LINE # 71 
0006 725F0000   F                      CLR    TxPointer
              ; SOURCE LINE # 72 
000A 7B01       F                      LD     A,(001H,SP)   ; [ c ]
000C C70000     F                      LD     TxCount,A
              ; SOURCE LINE # 73 
000F A601                              LD     A,#001H
0011 CD0000     F                      CALL   ?DE_set
              ; SOURCE LINE # 74 
0014 5500005231 F                      MOV    USART1_DR,TxBuffer
              ; SOURCE LINE # 75 
0019 72100000   F                      BSET   TxBusy
001D 84                                POP    A
001E 81                                RET    
              ; c            unsigned char  (size=1).  parameter in AUTO

              ; FUNCTION ?putpack (END)

              ; FUNCTION ?clearRxBuff (BEGIN)
              ; SOURCE LINE # 83 
0000 725F0000   F                      CLR    RxPointer
              ; SOURCE LINE # 84 
0004 725F0000   F                      CLR    RxBuffer
              ; SOURCE LINE # 85 
0008 72110000   F                      BRES   F_Comm
              ; SOURCE LINE # 86 
000C 3F00       F                      CLR    RxStatus
000E 81                                RET    

              ; FUNCTION ?clearRxBuff (END)

              ; FUNCTION ?USART1_TX_Interrupt (BEGIN)
              ; SOURCE LINE # 90 
0000 BE03       F                      LDW    X,?CH.w
0002 89                                PUSHW  X
0003 BE02       F                      LDW    X,?BH.w
0005 89                                PUSHW  X
              ; SOURCE LINE # 93 
0006 720D52302D                        BTJF   TC,?NXT_0007
              ; SOURCE LINE # 94 
000B 721D5230                          BRES   TC
              ; SOURCE LINE # 95 
000F C60000     F                      LD     A,TxPointer
0012 C10000     F                      CP     A,TxCount
0015 2411                              JRUGE  ?ELSE_0003
              ; SOURCE LINE # 97 
0017 725C0000   F                      INC    TxPointer
              ; SOURCE LINE # 98 
001B C60000     F                      LD     A,TxPointer
001E 5F                                CLRW   X
001F 97                                LD     XL,A
0020 D60020     F                      LD     A,(TxBuffer + 00H,X)
0023 C75231                            LD     USART1_DR,A
0026 2010                              JRA    ?NXT_0007
0028         ?ELSE_0003:
              ; SOURCE LINE # 102 
0028 725F0000   F                      CLR    TxCount
              ; SOURCE LINE # 103 
002C 725F0000   F                      CLR    TxPointer
              ; SOURCE LINE # 104 
0030 4F                                CLR    A
0031 CD0000     F                      CALL   ?DE_set
              ; SOURCE LINE # 105 
0034 72110000   F                      BRES   TxBusy
0038         ?NXT_0007:
0038 85                                POPW   X
0039 BF02       F                      LDW    ?BH.w,X
003B 85                                POPW   X
003C BF03       F                      LDW    ?CH.w,X
003E 80                                IRET   

              ; FUNCTION ?USART1_TX_Interrupt (END)

              ; FUNCTION ?USART1_RX_Interrupt (BEGIN)
              ; SOURCE LINE # 110 
0000 BE03       F                      LDW    X,?CH.w
0002 89                                PUSHW  X
0003 BE02       F                      LDW    X,?BH.w
0005 89                                PUSHW  X
              ; SOURCE LINE # 114 
0006 720B523038                        BTJF   RXNE,?NXT_0013
              ; SOURCE LINE # 117 
000B 721B5230                          BRES   RXNE
              ; SOURCE LINE # 118 
000F 5552310000 F                      MOV    temp,USART1_DR
              ; SOURCE LINE # 119 
0014 B600       F                      LD     A,RxStatus
0016 2714                              JREQ   ?CASE_0006
0018 4A                                DEC    A
0019 2716                              JREQ   ?CASE_0007
001B 4A                                DEC    A
001C 2718                              JREQ   ?CASE_0008
001E 4A                                DEC    A
001F 271A                              JREQ   ?CASE_0009
0021 4A                                DEC    A
0022 271C                              JREQ   ?CASE_0010
0024 4A                                DEC    A
0025 271C                              JREQ   ?NXT_0013
0027 CD0000     F                      CALL   ?nocommand
002A 2017                              JRA    ?DEFAULT_0001
002C         ?CASE_0006:
              ; SOURCE LINE # 122 
002C CD0000     F                      CALL   ?rec_pref
              ; SOURCE LINE # 123 
002F 2012                              JRA    ?NXT_0013
0031         ?CASE_0007:
              ; SOURCE LINE # 126 
0031 CD0000     F                      CALL   ?rec_addr
              ; SOURCE LINE # 127 
0034 200D                              JRA    ?NXT_0013
0036         ?CASE_0008:
              ; SOURCE LINE # 130 
0036 CD0000     F                      CALL   ?rec_command
              ; SOURCE LINE # 131 
0039 2008                              JRA    ?NXT_0013
003B         ?CASE_0009:
              ; SOURCE LINE # 134 
003B CD0000     F                      CALL   ?rec_param
              ; SOURCE LINE # 135 
003E 2003                              JRA    ?NXT_0013
0040         ?CASE_0010:
              ; SOURCE LINE # 138 
0040 CD0000     F                      CALL   ?rec_ident
0043         ?DEFAULT_0001:

0043         ?NXT_0013:
              ; SOURCE LINE # 146 
0043 85                                POPW   X
0044 BF02       F                      LDW    ?BH.w,X
0046 85                                POPW   X
0047 BF03       F                      LDW    ?CH.w,X
0049 80                                IRET   

              ; FUNCTION ?USART1_RX_Interrupt (END)

              ; FUNCTION ?rec_pref (BEGIN)
              ; SOURCE LINE # 154 
0000 7201000003 F                      BTJF   TuneMode,?ELSE_0009
0005 CC0000     F                      JP     ?checktuneprefix
0008         ?ELSE_0009:
              ; SOURCE LINE # 157 
0008 A63E                              LD     A,#03EH
000A B100       F                      CP     A,temp
000C 2613                              JRNE   ?ELSE_0010
              ; SOURCE LINE # 159 
000E C60000     F                      LD     A,RxPointer
0011 5F                                CLRW   X
0012 97                                LD     XL,A
0013 B600       F                      LD     A,temp
0015 D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 160 
0018 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 161 
001C 35010000   F                      MOV    RxStatus,#001H
0020 81                                RET    
0021         ?ELSE_0010:
              ; SOURCE LINE # 166 
0021 A63F                              LD     A,#03FH
0023 B100       F                      CP     A,temp
0025 2613                              JRNE   ?ELSE_0011
              ; SOURCE LINE # 168 
0027 C60000     F                      LD     A,RxPointer
002A 5F                                CLRW   X
002B 97                                LD     XL,A
002C B600       F                      LD     A,temp
002E D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 169 
0031 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 170 
0035 35040000   F                      MOV    RxStatus,#004H
0039 81                                RET    
003A         ?ELSE_0011:
              ; SOURCE LINE # 172 
003A CC0000     F                      JP     ?nocommand

              ; FUNCTION ?rec_pref (END)

              ; FUNCTION ?checktuneprefix (BEGIN)
              ; SOURCE LINE # 179 
0000 A63F                              LD     A,#03FH
0002 B100       F                      CP     A,temp
0004 2613                              JRNE   ?ELSE_0013
              ; SOURCE LINE # 181 
0006 C60000     F                      LD     A,RxPointer
0009 5F                                CLRW   X
000A 97                                LD     XL,A
000B B600       F                      LD     A,temp
000D D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 182 
0010 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 183 
0014 35010000   F                      MOV    RxStatus,#001H
0018 81                                RET    
0019         ?ELSE_0013:
              ; SOURCE LINE # 185 
0019 CC0000     F                      JP     ?nocommand

              ; FUNCTION ?checktuneprefix (END)

              ; FUNCTION ?rec_addr (BEGIN)
              ; SOURCE LINE # 190 
0000 C60000     F                      LD     A,RxPointer
0003 5F                                CLRW   X
0004 97                                LD     XL,A
0005 B600       F                      LD     A,temp
0007 D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 191 
000A 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 192 
000E 35020000   F                      MOV    RxStatus,#002H
0012 81                                RET    

              ; FUNCTION ?rec_addr (END)

              ; FUNCTION ?rec_ident (BEGIN)
              ; SOURCE LINE # 197 
0000 B600       F                      LD     A,temp
0002 4A                                DEC    A
0003 2612                              JRNE   ?EPILOG_0009
              ; SOURCE LINE # 199 
0005 C60000     F                      LD     A,RxPointer
0008 5F                                CLRW   X
0009 97                                LD     XL,A
000A B600       F                      LD     A,temp
000C D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 200 
000F 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 201 
0013 35020000   F                      MOV    RxStatus,#002H
0017         ?EPILOG_0009:
0017 81                                RET    

              ; FUNCTION ?rec_ident (END)

              ; FUNCTION ?rec_command (BEGIN)
              ; SOURCE LINE # 205 
0000 89                                PUSHW  X
              ; SOURCE LINE # 207 
0001 7201000005 F                      BTJF   TuneMode,?ELSE_0019
0006 CD0000     F                      CALL   ?checktunetable
0009 2048                              JRA    ?EPILOG_0010
000B         ?ELSE_0019:
              ; SOURCE LINE # 210 
000B 0F01       F                      CLR    (001H,SP)   ; [ i ]
000D         ?WHILE_0005:
              ; SOURCE LINE # 211 
000D 7B01       F                      LD     A,(001H,SP)   ; [ i ]
000F 5F                                CLRW   X
0010 97                                LD     XL,A
0011 D60000     F                      LD     A,(COMMANDLIST + 00H,X)
0014 6B02       F                      LD     (002H,SP),A
0016 4F                                CLR    A
0017 1102       F                      CP     A,(002H,SP)
0019 272D                              JREQ   ?NXT_0029
              ; SOURCE LINE # 213 
001B B600       F                      LD     A,temp
001D 1102       F                      CP     A,(002H,SP)
001F 2621                              JRNE   ?ELSE_0020
              ; SOURCE LINE # 215 
0021 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0023 97                                LD     XL,A
0024 D60001     F                      LD     A,(COMMANDLIST + 01H,X)
0027 B700       F                      LD     plen,A
              ; SOURCE LINE # 216 
0029 A6FD                              LD     A,#0FDH
002B BB00       F                      ADD    A,plen
002D B700       F                      LD     RxCount,A
              ; SOURCE LINE # 217 
002F C60000     F                      LD     A,RxPointer
0032 97                                LD     XL,A
0033 B600       F                      LD     A,temp
0035 D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 218 
0038 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 219 
003C 35030000   F                      MOV    RxStatus,#003H
              ; SOURCE LINE # 220 
0040 2006                              JRA    ?NXT_0029
0042         ?ELSE_0020:
              ; SOURCE LINE # 222 
0042 0C01       F                      INC    (001H,SP)   ; [ i ]
0044 0C01       F                      INC    (001H,SP)   ; [ i ]
0046 20C5                              JRA    ?WHILE_0005
0048         ?NXT_0029:
              ; SOURCE LINE # 225 
0048 A603                              LD     A,#003H
004A B100       F                      CP     A,RxStatus
004C 2705                              JREQ   ?EPILOG_0010
              ; SOURCE LINE # 228 
004E 3F00       F                      CLR    RxCount
              ; SOURCE LINE # 229 
0050 CD0000     F                      CALL   ?clearRxBuff
              ; i            unsigned char  (size=1). Automatic variable  in AUTO
0053         ?EPILOG_0010:
0053 85                                POPW   X
0054 81                                RET    

              ; FUNCTION ?rec_command (END)

              ; FUNCTION ?checktunetable (BEGIN)
              ; SOURCE LINE # 235 
0000 89                                PUSHW  X
              ; SOURCE LINE # 237 
0001 0F01       F                      CLR    (001H,SP)   ; [ i ]
0003         ?WHILE_0007:
              ; SOURCE LINE # 238 
0003 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0005 5F                                CLRW   X
0006 97                                LD     XL,A
0007 D60000     F                      LD     A,(TUNELIST + 00H,X)
000A 6B02       F                      LD     (002H,SP),A
000C 4F                                CLR    A
000D 1102       F                      CP     A,(002H,SP)
000F 272D                              JREQ   ?NXT_0035
              ; SOURCE LINE # 240 
0011 B600       F                      LD     A,temp
0013 1102       F                      CP     A,(002H,SP)
0015 2621                              JRNE   ?ELSE_0024
              ; SOURCE LINE # 242 
0017 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0019 97                                LD     XL,A
001A D60001     F                      LD     A,(TUNELIST + 01H,X)
001D B700       F                      LD     plen,A
              ; SOURCE LINE # 243 
001F A6FD                              LD     A,#0FDH
0021 BB00       F                      ADD    A,plen
0023 B700       F                      LD     RxCount,A
              ; SOURCE LINE # 244 
0025 C60000     F                      LD     A,RxPointer
0028 97                                LD     XL,A
0029 B600       F                      LD     A,temp
002B D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 245 
002E 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 246 
0032 35030000   F                      MOV    RxStatus,#003H
              ; SOURCE LINE # 247 
0036 2006                              JRA    ?NXT_0035
0038         ?ELSE_0024:
              ; SOURCE LINE # 249 
0038 0C01       F                      INC    (001H,SP)   ; [ i ]
003A 0C01       F                      INC    (001H,SP)   ; [ i ]
003C 20C5                              JRA    ?WHILE_0007
003E         ?NXT_0035:
              ; SOURCE LINE # 252 
003E A603                              LD     A,#003H
0040 B100       F                      CP     A,RxStatus
0042 2705                              JREQ   ?EPILOG_0011
              ; SOURCE LINE # 255 
0044 3F00       F                      CLR    RxCount
              ; SOURCE LINE # 256 
0046 CD0000     F                      CALL   ?clearRxBuff
0049         ?EPILOG_0011:
0049 85                                POPW   X
004A 81                                RET    
              ; i            unsigned char  (size=1). Automatic variable  in AUTO

              ; FUNCTION ?checktunetable (END)

              ; FUNCTION ?rec_param (BEGIN)
              ; SOURCE LINE # 262 
0000 C60000     F                      LD     A,RxPointer
0003 5F                                CLRW   X
0004 97                                LD     XL,A
0005 B600       F                      LD     A,temp
0007 D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 263 
000A 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 264 
000E 3A00       F                      DEC    RxCount
              ; SOURCE LINE # 265 
0010 2609                              JRNE   ?EPILOG_0012
              ; SOURCE LINE # 267 
0012 35050000   F                      MOV    RxStatus,#005H
              ; SOURCE LINE # 268 
0016 B600       F                      LD     A,plen
0018 4A                                DEC    A
0019 B700       F                      LD     Comm_Len,A
001B         ?EPILOG_0012:
001B 81                                RET    

              ; FUNCTION ?rec_param (END)

              ; FUNCTION ?nocommand (BEGIN)
              ; SOURCE LINE # 275 
0000 72110000   F                      BRES   F_Comm
              ; SOURCE LINE # 276 
0004 3F00       F                      CLR    RxCount
              ; SOURCE LINE # 278 
0006 CC0000     F                      JP     ?clearRxBuff

              ; FUNCTION ?nocommand (END)

RCSTM8 COMPILER V2.28.10.092
NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

PA_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005000H 1      
PA_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005001H 1      
PA_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005002H 1      
PA_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005003H 1      
PA_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005004H 1      
PB_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005005H 1      
PB_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005006H 1      
PB_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005007H 1      
PB_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005008H 1      
PB_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005009H 1      
PC_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500AH 1      
PC_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500BH 1      
PC_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500CH 1      
PC_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500DH 1      
PC_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500EH 1      
PD_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500FH 1      
PD_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005010H 1      
PD_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005011H 1      
PD_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005012H 1      
PD_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005013H 1      
PE_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005014H 1      
PE_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005015H 1      
PE_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005016H 1      
PE_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005017H 1      
PE_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005018H 1      
PF_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005019H 1      
PF_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501AH 1      
PF_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501BH 1      
PF_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501CH 1      
PF_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501DH 1      
FLASH_CR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005050H 1      
FLASH_CR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005051H 1      
FLASH_PUKR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005052H 1      
FLASH_DUKR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005053H 1      
FLASH_IAPSR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005054H 1      
DMA1_GCSR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005070H 1      
DMA1_GIR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005071H 1      
DMA1_C0CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005075H 1      
DMA1_C0SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005076H 1      
DMA1_C0NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005077H 1      
DMA1_C0PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005078H 2      
DMA1_C0PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005078H 1      
DMA1_C0PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005079H 1      
DMA1_C0M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00507BH 2      
DMA1_C0M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507BH 1      
DMA1_C0M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507CH 1      
DMA1_C1CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507FH 1      
DMA1_C1SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005080H 1      
DMA1_C1NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005081H 1      
DMA1_C1PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005082H 2      
DMA1_C1PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005082H 1      
DMA1_C1PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005083H 1      
DMA1_C1M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005085H 2      
DMA1_C1M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005085H 1      
DMA1_C1M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005086H 1      
DMA1_C2CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005089H 1      
DMA1_C2SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508AH 1      
DMA1_C2NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508BH 1      
DMA1_C2PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00508CH 2      
DMA1_C2PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508CH 1      
DMA1_C2PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508DH 1      
DMA1_C2M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00508FH 2      
DMA1_C2M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508FH 1      
DMA1_C2M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005090H 1      
DMA1_C3CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005093H 1      
DMA1_C3SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005094H 1      
DMA1_C3NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005095H 1      
DMA1_C3PAR_C3M1AR. . . . . . . . . . .  HREG16   hreg16  U_INT   005096H 2      
DMA1_C3PARH_C3M1ARH. . . . . . . . . .  HREG     hreg    U_CHAR  005096H 1      
DMA1_C3PARL_C3M1ARL. . . . . . . . . .  HREG     hreg    U_CHAR  005097H 1      
DMA1_C3M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005099H 2      
DMA1_C3M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005099H 1      
DMA1_C3M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509AH 1      
SYSCFG_RMPCR1. . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509EH 1      
SYSCFG_RMPCR2. . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509FH 1      
EXTI_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A0H 1      
EXTI_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A1H 1      
EXTI_CR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A2H 1      
EXTI_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A3H 1      
EXTI_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A4H 1      
EXTI_CONF. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A5H 1      
WFE_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A6H 1      
WFE_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A7H 1      
WFE_CR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A8H 1      
RST_CR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B0H 1      
RST_SR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B1H 1      
PWR_CSR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B2H 1      
PWR_CSR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B3H 1      
CLK_CKDIVR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C0H 1      
CLK_CRTCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C1H 1      
CLK_ICKCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C2H 1      
CLK_PCKENR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C3H 1      
CLK_PCKENR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C4H 1      
CLK_CCOR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C5H 1      
CLK_ECKCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C6H 1      
CLK_SCSR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C7H 1      
CLK_SWR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C8H 1      
CLK_SWCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C9H 1      
CLK_CSSR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CAH 1      
CLK_CBEEPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CBH 1      
CLK_HSICALR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CCH 1      
CLK_HSITRIMR . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CDH 1      
CLK_HSIUNLCKR. . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CEH 1      
CLK_REGCSR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CFH 1      
WWDG_CR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050D3H 1      
WWDG_WR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050D4H 1      
IWDG_KR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E0H 1      
IWDG_PR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E1H 1      
IWDG_RLR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E2H 1      
BEEP_CSR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050F0H 1      
BEEP_CSR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050F3H 1      
RTC_TR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005140H 1      
RTC_TR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005141H 1      
RTC_TR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005142H 1      
RTC_DR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005144H 1      
RTC_DR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005145H 1      
RTC_DR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005146H 1      
RTC_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005148H 1      
RTC_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005149H 1      
RTC_CR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514AH 1      
RTC_ISR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514CH 1      
RTC_ISR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514DH 1      
RTC_SPRER. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005150H 2      
RTC_SPRERH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005150H 1      
RTC_SPRERL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005151H 1      
RTC_APRER. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005152H 1      
RTC_WUTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005154H 2      
RTC_WUTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005154H 1      
RTC_WUTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005155H 1      
RTC_WPR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005159H 1      
RTC_ALRMAR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515CH 1      
RTC_ALRMAR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515DH 1      
RTC_ALRMAR3. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515EH 1      
RTC_ALRMAR4. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515FH 1      
SPI1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005200H 1      
SPI1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005201H 1      
SPI1_ICR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005202H 1      
SPI1_SR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005203H 1      
SPI1_DR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005204H 1      
SPI1_CRCPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005205H 1      
SPI1_RXCRCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005206H 1      
SPI1_TXCRCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005207H 1      
I2C1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005210H 1      
I2C1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005211H 1      
I2C1_FREQR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005212H 1      
I2C1_OARL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005213H 1      
I2C1_OARH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005214H 1      
I2C1_DR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005216H 1      
I2C1_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005217H 1      
I2C1_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005218H 1      
I2C1_SR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005219H 1      
I2C1_ITR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521AH 1      
I2C1_CCRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521BH 1      
I2C1_CCRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521CH 1      
I2C1_TRISER. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521DH 1      
I2C1_PECR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521EH 1      
USART1_SR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005230H 1      
USART1_DR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005231H 1      
USART1_BRR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005232H 1      
USART1_BRR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005233H 1      
USART1_CR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005234H 1      
USART1_CR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005235H 1      
USART1_CR3 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005236H 1      
USART1_CR4 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005237H 1      
USART1_CR5 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005238H 1      
USART1_GTR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005239H 1      
USART1_PSCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00523AH 1      
TIM2_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005250H 1      
TIM2_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005251H 1      
TIM2_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005252H 1      
TIM2_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005253H 1      
TIM2_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005254H 1      
TIM2_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005255H 1      
TIM2_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005256H 1      
TIM2_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005257H 1      
TIM2_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005258H 1      
TIM2_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005259H 1      
TIM2_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525AH 1      
TIM2_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525BH 1      
TIM2_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00525CH 2      
TIM2_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525CH 1      
TIM2_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525DH 1      
TIM2_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525EH 1      
TIM2_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00525FH 2      
TIM2_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525FH 1      
TIM2_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005260H 1      
TIM2_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005261H 2      
TIM2_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005261H 1      
TIM2_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005262H 1      
TIM2_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005263H 2      
TIM2_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005263H 1      
TIM2_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005264H 1      
TIM2_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005265H 1      
TIM2_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005266H 1      
TIM3_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005280H 1      
TIM3_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005281H 1      
TIM3_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005282H 1      
TIM3_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005283H 1      
TIM3_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005284H 1      
TIM3_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005285H 1      
TIM3_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005286H 1      
TIM3_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005287H 1      
TIM3_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005288H 1      
TIM3_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005289H 1      
TIM3_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528AH 1      
TIM3_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528BH 1      
TIM3_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00528CH 2      
TIM3_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528CH 1      
TIM3_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528DH 1      
TIM3_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528EH 1      
TIM3_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00528FH 2      
TIM3_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528FH 1      
TIM3_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005290H 1      
TIM3_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005291H 2      
TIM3_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005291H 1      
TIM3_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005292H 1      
TIM3_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005293H 2      
TIM3_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005293H 1      
TIM3_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005294H 1      
TIM3_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005295H 1      
TIM3_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005296H 1      
TIM1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B0H 1      
TIM1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B1H 1      
TIM1_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B2H 1      
TIM1_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B3H 1      
TIM1_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B4H 1      
TIM1_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B5H 1      
TIM1_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B6H 1      
TIM1_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B7H 1      
TIM1_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B8H 1      
TIM1_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B9H 1      
TIM1_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BAH 1      
TIM1_CCMR3 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BBH 1      
TIM1_CCMR4 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BCH 1      
TIM1_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BDH 1      
TIM1_CCER2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BEH 1      
TIM1_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052BFH 2      
TIM1_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BFH 1      
TIM1_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C0H 1      
TIM1_PSCR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C1H 2      
TIM1_PSCRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C1H 1      
TIM1_PSCRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C2H 1      
TIM1_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C3H 2      
TIM1_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C3H 1      
TIM1_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C4H 1      
TIM1_RCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C5H 1      
TIM1_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C6H 2      
TIM1_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C6H 1      
TIM1_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C7H 1      
TIM1_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C8H 2      
TIM1_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C8H 1      
TIM1_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C9H 1      
TIM1_CCR3. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052CAH 2      
TIM1_CCR3H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CAH 1      
TIM1_CCR3L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CBH 1      
TIM1_CCR4. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052CCH 2      
TIM1_CCR4H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CCH 1      
TIM1_CCR4L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CDH 1      
TIM1_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CEH 1      
TIM1_DTR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CFH 1      
TIM1_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D0H 1      
TIM1_DCR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D1H 1      
TIM1_DCR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D2H 1      
TIM1_DMAR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D3H 1      
TIM4_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E0H 1      
TIM4_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E1H 1      
TIM4_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E2H 1      
TIM4_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E3H 1      
TIM4_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E4H 1      
TIM4_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E5H 1      
TIM4_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E6H 1      
TIM4_CNTR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E7H 1      
TIM4_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E8H 1      
TIM4_ARR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E9H 1      
IR_CR. . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052FFH 1      
ADC1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005340H 1      
ADC1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005341H 1      
ADC1_CR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005342H 1      
ADC1_SR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005343H 1      
ADC1_DR. . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005344H 2      
ADC1_DRH . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005344H 1      
ADC1_DRL . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005345H 1      
ADC1_HTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005346H 2      
ADC1_HTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005346H 1      
ADC1_HTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005347H 1      
ADC1_LTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005348H 2      
ADC1_LTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005348H 1      
ADC1_LTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005349H 1      
ADC1_SQR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534AH 1      
ADC1_SQR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534BH 1      
ADC1_SQR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534CH 1      
ADC1_SQR4. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534DH 1      
ADC1_TRIGR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534EH 1      
ADC1_TRIGR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534FH 1      
ADC1_TRIGR3. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005350H 1      
ADC1_TRIGR4. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005351H 1      
DAC_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005380H 1      
DAC_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005381H 1      
DAC_SWTRIGR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005384H 1      
DAC_SR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005385H 1      
DAC_RDHR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005388H 2      
DAC_RDHRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005388H 1      
DAC_RDHRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005389H 1      
DAC_LDHR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00538CH 2      
DAC_LDHRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00538CH 1      
DAC_LDHRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00538DH 1      
DAC_DHR8 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005390H 1      
DAC_DOR. . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0053ACH 2      
DAC_DORH . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0053ACH 1      
DAC_DORL . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0053ADH 1      
RI_ICR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005431H 1      
RI_ICR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005432H 1      
RI_IOIR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005433H 1      
RI_IOIR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005434H 1      
RI_IOIR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005435H 1      
RI_IOCMR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005436H 1      
RI_IOCMR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005437H 1      
RI_IOCMR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005438H 1      
RI_IOSR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005439H 1      
RI_IOSR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543AH 1      
RI_IOSR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543BH 1      
RI_IOGCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543CH 1      
RI_ASCR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543DH 1      
RI_ASCR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543EH 1      
RI_RCR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543FH 1      
COMP_CSR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005440H 1      
COMP_CSR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005441H 1      
COMP_CSR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005442H 1      
COMP_CSR4. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005443H 1      
COMP_CSR5. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005444H 1      
CFG_GCR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F60H 1      
ITC_SPR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F70H 1      
ITC_SPR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F71H 1      
ITC_SPR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F72H 1      
ITC_SPR4 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F73H 1      
ITC_SPR5 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F74H 1      
ITC_SPR6 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F75H 1      
ITC_SPR7 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F76H 1      
ITC_SPR8 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F77H 1      
_fctptr_t. . . . . . . . . . . . . . .  TYPEDEF ------- PTR   -------      2
_halt_ . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_jmp_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_nop_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_rim_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_sim_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_trap_ . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_wfe_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_wfi_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_getCC_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_setCC_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_getSP_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_setSP_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_swapbyte_ . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_swapnibble_ . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
DWORD. . . . . . . . . . . . . . . . .  TYPEDEF ------- ????? -------      4
WORD . . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     2
BYTE . . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     1
delay. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
initUART . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
putpack. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
copypacket . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
clearRxBuff. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
RxBuffer . . . . . . . . . . . . . . .  EXTERN  data    ARRAY   ------- -----
TxBuffer . . . . . . . . . . . . . . .  EXTERN  data    ARRAY   ------- -----
Comm_Len . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxStatus . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxCount. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
plen . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
TxCount. . . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
TxPointer. . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
RxPointer. . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
TxBusy . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
TXE. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029187H 1      
TC . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029186H 1      
RXNE . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029185H 1      
IDLE . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029184H 1      
OR . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029183H 1      
NF . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029182H 1      
FE . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029181H 1      
PE . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029180H 1      
R8 . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A7H 1      
T8 . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A6H 1      
USARTD . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A5H 1      
M. . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A4H 1      
WAKE . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A3H 1      
PCEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A2H 1      
PS . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A1H 1      
PIEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A0H 1      
TIEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291AFH 1      
TCIEN. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291AEH 1      
RIEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291ADH 1      
ILIEN. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291ACH 1      
TEN. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291ABH 1      
REN. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291AAH 1      
RWU. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A9H 1      
SBK. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A8H 1      
STOP1. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B5H 1      
STOP0. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B4H 1      
CLKEN. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B3H 1      
CPOL . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B2H 1      
CPHA . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B1H 1      
LBCL . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B0H 1      
DMAT . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C7H 1      
DMAR . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C6H 1      
SCEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C5H 1      
NACK . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C4H 1      
HDSEL. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C3H 1      
IRLP . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C2H 1      
IREN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C1H 1      
EIE. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C0H 1      
checkpacket. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
handlecommand. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
sendrequest. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CRC. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
TxCRC. . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxCRC. . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
F_Comm . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
Command. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
TuneMode . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
F_Comm . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
Lister . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
COMMANDLIST. . . . . . . . . . . . . .  EXTERN  code    ARRAY   ------- -----
TUNELIST . . . . . . . . . . . . . . .  EXTERN  code    ARRAY   ------- -----
initIO . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
blink. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
LED_set. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
DE_set . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CheckERF . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
temp . . . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000000H 1      
initUART . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
putstr . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
putpack. . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
clearRxBuff. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
rec_pref . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
checktuneprefix. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
rec_addr . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
rec_ident. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
rec_command. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
checktunetable . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
rec_param. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
nocommand. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
RxBuffer . . . . . . . . . . . . . . .  PUBLIC  data    ARRAY   000000H 32     
TxBuffer . . . . . . . . . . . . . . .  PUBLIC  data    ARRAY   000020H 128    
Comm_Len . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000001H 1      
RxStatus . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000002H 1      
RxCount. . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000003H 1      
plen . . . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000004H 1      
TxCount. . . . . . . . . . . . . . . .  PUBLIC  data    U_CHAR  0000A0H 1      
TxPointer. . . . . . . . . . . . . . .  PUBLIC  data    U_CHAR  0000A1H 1      
RxPointer. . . . . . . . . . . . . . .  PUBLIC  data    U_CHAR  0000A2H 1      
TxBusy . . . . . . . . . . . . . . . .  PUBLIC  bit     BIT     000000H 1      
initUART . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  i?110. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
putstr . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 Addr?108. . . . . . . . . . . . . . .  PARAM    page0   PTR     000000H 2      
  i?110. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
putpack. . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 c?111 . . . . . . . . . . . . . . . .  PARAM    auto    U_CHAR  000000H 1      
clearRxBuff. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
USART1_TX_Interrupt. . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
USART1_RX_Interrupt. . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
rec_pref . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
checktuneprefix. . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
rec_addr . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
rec_ident. . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  i?125. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
rec_command. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  i?125. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
  i?129. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
checktunetable . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  i?129. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
rec_param. . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
nocommand. . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
DE_set . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
F_Comm . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
?CH. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
?BH. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
TuneMode . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
COMMANDLIST. . . . . . . . . . . . . .  EXTERN  code    ARRAY   ------- -----
TUNELIST . . . . . . . . . . . . . . .  EXTERN  code    ARRAY   ------- -----
RCSTM8 COMPILER V2.28.10.092


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    599    ----
   CONSTANT SIZE    =      8    ----
   DATA SIZE        =    163    ----
   PAGE0 SIZE       =      5    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.

RCSTM8 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
