RCSTM8 COMPILER V2.28.10.092,  UART               05/14/19  16:28:55

QCW(0x009638A0)

RCSTM8 COMPILER V2.28.10.092, COMPILATION OF MODULE UART      
OBJECT MODULE PLACED IN Debug\uart.o
COMPILER INVOKED BY: OBJECT(Debug\uart.o) PIN(C:\Program Files (x86)\Raisonance\Ride\inc\STM8) PIN(C:\Program Files (x86)\Raisonance\Ride\inc\ST7) PIN(C:\Program Files (x86)\Raisonance\Ride\inc) DGC(page0) AUTO WRV(0) PR(Debug\uart.lst) CD CO SB OT(0) DEBUG STM8(SMALL) 

stmt level    source
   1          #include "uart.h"
   2          #include "uart_reg.h"
   3          #include "commands.h"
   4          #include "gpio.h"
   5          #include "global.h"
   6          
   7          BYTE temp;
   8          
   9          void initUART(void);
  10          void putstr (const char *Addr);
  11          void putpack (BYTE c);
  12          void clearRxBuff(void);
  13          void rec_pref(void);
  14          void rec_addr(void);
  15          void rec_command(void);
  16          void rec_param(void);
  17          void nocommand(void);
  18          
  19          BYTE data RxBuffer[RXBUFFERSIZE];
  20          BYTE data TxBuffer[TXBUFFERSIZE];
  21          BYTE Comm_Len;
  22          BYTE RxStatus;
  23          BYTE RxCount;
  24          BYTE plen;
  25          BYTE data TxCount;
  26          BYTE data TxPointer;
  27          BYTE data RxPointer;
  28          bit TxBusy;
  29          
  30          
  31          void initUART(void)
  32          {	
  33   1      	SYSCFG_RMPCR1 = 0x2C; //remap UART lines to PC5, PC6
  34   1      	USART1_BRR2 = (HI(BDIVIDER) & 0xF0) | (LO(BDIVIDER) & 0x0F);
  35   1      	USART1_BRR1 = ((HI(BDIVIDER) & 0x0F)<<4) | ((LO(BDIVIDER) & 0xF0)>>4);
  36   1      	USART1_CR1 = 0;
  37   1      	USART1_CR2 = 0b01101100;
  38   1      	USART1_CR3 = 0b00000000;
  39   1      	USART1_CR4 = 0;
  40   1      	USART1_CR5 = 0;
  41   1      	USART1_CR4 = 0;
  42   1      	USART1_CR5 = 0;
  43   1      	clearRxBuff();
  44   1      	TxPointer=0;
  45   1      }
  46          
  47          
  48          void putstr (const char *Addr)
  49          {
  50   1      	BYTE i=0;
  51   1      	while (*Addr !=0)
  52   1      		{
  53   2      		TxBuffer[i]=*Addr;
  54   2      		i++;
  55   2      		Addr++;
  56   2      		}
  57   1      					
  58   1      	//i++;
  59   1      	TxBuffer[i]=0x0D;
  60   1      	i++;
  61   1      	TxBuffer[i]=0x0A;
  62   1      	putpack(i);
  63   1      }
  64          
  65          
  66          void putpack (BYTE c)
  67          {	while (TxBusy);
  68   1      	TxPointer = 0;
  69   1      	TxCount = c;
  70   1      	//DE_set(1); //switch driver to transmit
  71   1      	USART1_DR = TxBuffer[0];
  72   1      	TxBusy = 1;
  73   1      }
  74          
  75          
  76          
  77          void clearRxBuff(void)
  78          
  79          {
  80   1      	RxPointer=0;
  81   1      	RxBuffer[0]=0;
  82   1      	F_Comm=0;
  83   1      	RxStatus = 0;
  84   1      }
  85          
  86          //USART interrupts
  87          void USART1_TX_Interrupt() interrupt 27		
  88          
  89          	{
  90   1      	 if (TC)
  91   1      	 {TC=0;
  92   2      	 if (TxPointer < TxCount)  	// it's end?
  93   2       		{
  94   3      		TxPointer++;			// next byte
  95   3      		USART1_DR = TxBuffer[TxPointer];	// put next byte from buffer
  96   3      		}
  97   2      	 else 
  98   2      	 {
  99   3      		TxCount=0;
 100   3      		TxPointer=0;
 101   3      		//DE_set(0);
 102   3      		TxBusy=0;//transmitter free
 103   3      	 }
 104   2       }
 105   1      
 106   1      	}
 107          void USART1_RX_Interrupt() interrupt 28	
 108          {
 109   1      		//static BYTE plen;
 110   1      		
 111   1      		if (RXNE)
 112   1      		{
 113   2      		
 114   2      		RXNE=0;
 115   2      		temp = USART1_DR;
 116   2      		switch (RxStatus)
 117   2      		{
 118   3      			case 0://nothing received
 119   3      			rec_pref();
 120   3      			break;
 121   3      			
 122   3      			case 1://prefix received
 123   3      			rec_addr();
 124   3      			break;
 125   3      			
 126   3      			case 2://address received
 127   3      			rec_command();
 128   3      			break;
 129   3      			
 130   3      			case 3://command received
 131   3      			rec_param();
 132   3      			break;
 133   3      			
 134   3      			case 4://command not executed, nothing to do
 135   3      			break;
 136   3      			
 137   3      			default:
 138   3      			nocommand();
 139   3      			break;
 140   3      					
 141   3      		}
 142   2      		}
 143   1      }		
 144          
 145          void rec_pref(void)
 146          	{
 147   1      		
 148   1      		
 149   1      			
 150   1      				if (temp == RXPREFIX)
 151   1      				{
 152   2      					RxBuffer[RxPointer] = temp;
 153   2      					RxPointer++;
 154   2      					RxStatus = 1;
 155   2      				}
 156   1      				
 157   1      				else nocommand();
 158   1      				
 159   1      			
 160   1      	}
 161          			
 162          
 163          
 164          void rec_addr(void)
 165          {
 166   1      	if ((temp == 0xFF) || (temp == NetAddr))
 167   1      	{
 168   2      	RxBuffer[RxPointer] = temp;
 169   2      	RxPointer++;
 170   2      	RxStatus = 2;
 171   2      	}
 172   1      	else 
 173   1      			{//check prefix
 174   2      				if (temp == RXPREFIX)
 175   2      				{
 176   3      					RxPointer = 0;
 177   3      					RxBuffer[RxPointer] = temp;
 178   3      					RxPointer++;
 179   3      					RxStatus = 1;
 180   3      				}
 181   2      				
 182   2      				else nocommand();
 183   2      			}
 184   1      	
 185   1      }
 186          
 187          
 188          void rec_command(void)
 189          {
 190   1      	
 191   1      	
 192   1      		BYTE i = 0;
 193   1      		while ((COMMANDLIST[i] != 0))
 194   1      				{
 195   2      				 if (temp == COMMANDLIST[i])
 196   2      				 {
 197   3      				 	plen = COMMANDLIST[i+1];
 198   3      					RxCount = plen-3;
 199   3      					RxBuffer[RxPointer] = temp;
 200   3      					RxPointer++;
 201   3      					RxStatus = 3;
 202   3      					break;
 203   3      				 }
 204   2      				 else i += 2;
 205   2      				 
 206   2      				}
 207   1      			if 	(RxStatus != 3) 
 208   1      			{
 209   2      			//plen = 0;
 210   2      			RxCount = 0;
 211   2      			clearRxBuff(); //command not found
 212   2      			}
 213   1      			
 214   1      	
 215   1      }
 216          
 217          
 218          
 219          void rec_param(void)
 220          {
 221   1      			RxBuffer[RxPointer] = temp;
 222   1      			RxPointer++;
 223   1      			RxCount--;
 224   1      			if (RxCount ==0)
 225   1      			{			
 226   2      			RxStatus = 4; 
 227   2      			Comm_Len = plen-1;
 228   2      			}
 229   1      			
 230   1      }
 231          
 232          void nocommand(void)
 233          {
 234   1      	F_Comm = 0;
 235   1      	RxCount = 0;
 236   1      	RxStatus = 0;
 237   1      	clearRxBuff();
 238   1      }
 239          
 240          
 241          
RCSTM8 COMPILER V2.28.10.092
ASSEMBLY LISTING OF GENERATED OBJECT CODE

              ; FUNCTION ?initUART (BEGIN)
              ; SOURCE LINE # 33 
0000 352C509E                          MOV    SYSCFG_RMPCR1,#02CH
              ; SOURCE LINE # 34 
0004 350A5233                          MOV    USART1_BRR2,#00AH
              ; SOURCE LINE # 35 
0008 35085232                          MOV    USART1_BRR1,#008H
              ; SOURCE LINE # 36 
000C 35005234                          MOV    USART1_CR1,#000H
              ; SOURCE LINE # 37 
0010 356C5235                          MOV    USART1_CR2,#06CH
              ; SOURCE LINE # 38 
0014 35005236                          MOV    USART1_CR3,#000H
              ; SOURCE LINE # 39 
0018 35005237                          MOV    USART1_CR4,#000H
              ; SOURCE LINE # 40 
001C 35005238                          MOV    USART1_CR5,#000H
              ; SOURCE LINE # 41 
0020 35005237                          MOV    USART1_CR4,#000H
              ; SOURCE LINE # 42 
0024 35005238                          MOV    USART1_CR5,#000H
              ; SOURCE LINE # 43 
0028 CD0000     F                      CALL   ?clearRxBuff
              ; SOURCE LINE # 44 
002B 35000000   F                      MOV    TxPointer,#000H
002F         ?EPILOG_0000:
002F 81                                RET    

              ; FUNCTION ?initUART (END)

              ; FUNCTION ?putstr (BEGIN)
              ; Register-parameter Addr (XW) is relocated (auto)
              ; SOURCE LINE # 48 
0000 89                                PUSHW  X
0001 88                                PUSH   A
              ; SOURCE LINE # 50 
0002 A600                              LD     A,#000H
0004 6B01       F                      LD     (001H,SP),A   ; [ i ]
0006         ?WHILE_0001:
              ; SOURCE LINE # 51 
0006 1E02       F                      LDW    X,(002H,SP)   ; [ Addr ]
0008 7D                                TNZ    (X)
0009 2715                              JREQ   ?NXT_0001
              ; SOURCE LINE # 53 
000B 1E02       F                      LDW    X,(002H,SP)   ; [ Addr ]
000D F6                                LD     A,(X)
000E 88                                PUSH   A
000F 5F                                CLRW   X
0010 7B02       F                      LD     A,(002H,SP)   ; [ i ]
0012 97                                LD     XL,A
0013 84                                POP    A
0014 D70080     F                      LD     (TxBuffer + 00H,X),A
              ; SOURCE LINE # 54 
0017 0C01       F                      INC    (001H,SP)   ; [ i ]
              ; SOURCE LINE # 55 
0019 1E02       F                      LDW    X,(002H,SP)   ; [ Addr ]
001B 5C                                INCW   X
001C 1F02       F                      LDW    (002H,SP),X   ; [ Addr ]
001E 20E6                              JRA    ?WHILE_0001
0020         ?NXT_0001:
              ; SOURCE LINE # 59 
0020 5F                                CLRW   X
0021 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0023 97                                LD     XL,A
0024 A60D                              LD     A,#00DH
0026 D70080     F                      LD     (TxBuffer + 00H,X),A
              ; SOURCE LINE # 60 
0029 0C01       F                      INC    (001H,SP)   ; [ i ]
              ; SOURCE LINE # 61 
002B 5F                                CLRW   X
002C 7B01       F                      LD     A,(001H,SP)   ; [ i ]
002E 97                                LD     XL,A
002F A60A                              LD     A,#00AH
0031 D70080     F                      LD     (TxBuffer + 00H,X),A
              ; SOURCE LINE # 62 
0034 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0036 CD0000     F                      CALL   ?putpack
0039         ?EPILOG_0001:
0039 5B03                              ADD    SP,#003H
003B 81                                RET    
              ; Addr         pointer to (unsigned char   in  const)(size=2).  parameter in AUTO
              ; i            unsigned char  (size=1). Automatic variable  in AUTO

              ; FUNCTION ?putstr (END)

              ; FUNCTION ?putpack (BEGIN)
              ; Register-parameter c (A) is relocated (auto)
              ; SOURCE LINE # 66 
0000 88                                PUSH   A
0001         ?WHILE_0003:
              ; SOURCE LINE # 67 
0001 72000000FB F                      BTJT   TxBusy,?WHILE_0003
              ; SOURCE LINE # 68 
0006 35000000   F                      MOV    TxPointer,#000H
              ; SOURCE LINE # 69 
000A 7B01       F                      LD     A,(001H,SP)   ; [ c ]
000C C70000     F                      LD     TxCount,A
              ; SOURCE LINE # 71 
000F 5500005231 F                      MOV    USART1_DR,TxBuffer
              ; SOURCE LINE # 72 
0014 72100000   F                      BSET   TxBusy
0018         ?EPILOG_0002:
0018 84                                POP    A
0019 81                                RET    
              ; c            unsigned char  (size=1).  parameter in AUTO

              ; FUNCTION ?putpack (END)

              ; FUNCTION ?clearRxBuff (BEGIN)
              ; SOURCE LINE # 80 
0000 35000000   F                      MOV    RxPointer,#000H
              ; SOURCE LINE # 81 
0004 35000000   F                      MOV    RxBuffer,#000H
              ; SOURCE LINE # 82 
0008 72110000   F                      BRES   F_Comm
              ; SOURCE LINE # 83 
000C 35000000   F                      MOV    RxStatus,#000H
0010         ?EPILOG_0003:
0010 81                                RET    

              ; FUNCTION ?clearRxBuff (END)

              ; FUNCTION ?USART1_TX_Interrupt (BEGIN)
              ; SOURCE LINE # 90 
0000 720D523029                        BTJF   TC,?NXT_0005
              ; SOURCE LINE # 91 
0005 721D5230                          BRES   TC
              ; SOURCE LINE # 92 
0009 C60000     F                      LD     A,TxPointer
000C C10000     F                      CP     A,TxCount
000F 2411                              JRUGE  ?ELSE_0003
              ; SOURCE LINE # 94 
0011 725C0000   F                      INC    TxPointer
              ; SOURCE LINE # 95 
0015 5F                                CLRW   X
0016 C60000     F                      LD     A,TxPointer
0019 97                                LD     XL,A
001A D60080     F                      LD     A,(TxBuffer + 00H,X)
001D C75231                            LD     USART1_DR,A
0020 200C                              JRA    ?NXT_0006
0022         ?ELSE_0003:
              ; SOURCE LINE # 99 
0022 35000000   F                      MOV    TxCount,#000H
              ; SOURCE LINE # 100 
0026 35000000   F                      MOV    TxPointer,#000H
              ; SOURCE LINE # 102 
002A 72110000   F                      BRES   TxBusy
002E         ?NXT_0006:

002E         ?NXT_0005:

002E         ?EPILOG_0004:

002E         ?NXT_0007:
002E 80                                IRET   

              ; FUNCTION ?USART1_TX_Interrupt (END)

              ; FUNCTION ?USART1_RX_Interrupt (BEGIN)
              ; SOURCE LINE # 107 
0000 BE03       F                      LDW    X,?CH.w
0002 89                                PUSHW  X
0003 BE02       F                      LDW    X,?BH.w
0005 89                                PUSHW  X
              ; SOURCE LINE # 111 
0006 720B52303D                        BTJF   RXNE,?NXT_0011
              ; SOURCE LINE # 114 
000B 721B5230                          BRES   RXNE
              ; SOURCE LINE # 115 
000F 5552310000 F                      MOV    temp,USART1_DR
0014 B600       F                      LD     A,temp
              ; SOURCE LINE # 116 
0016 450003     F                      MOV    ?BH,RxStatus
0019 B603       F                      LD     A,?BH
001B A000                              SUB    A,#000H
001D 270E                              JREQ   ?CASE_0005
001F 4A                                DEC    A
0020 2710                              JREQ   ?CASE_0006
0022 4A                                DEC    A
0023 2712                              JREQ   ?CASE_0007
0025 4A                                DEC    A
0026 2714                              JREQ   ?CASE_0008
0028 4A                                DEC    A
0029 2716                              JREQ   ?CASE_0009
002B         ?LAB_0001:
002B 2016                              JRA    ?DEFAULT_0001
002D         ?CASE_0005:
              ; SOURCE LINE # 119 
002D CD0000     F                      CALL   ?rec_pref
              ; SOURCE LINE # 120 
0030 2016                              JRA    ?NXT_0012
0032         ?CASE_0006:
              ; SOURCE LINE # 123 
0032 CD0000     F                      CALL   ?rec_addr
              ; SOURCE LINE # 124 
0035 2011                              JRA    ?NXT_0012
0037         ?CASE_0007:
              ; SOURCE LINE # 127 
0037 CD0000     F                      CALL   ?rec_command
              ; SOURCE LINE # 128 
003A 200C                              JRA    ?NXT_0012
003C         ?CASE_0008:
              ; SOURCE LINE # 131 
003C CD0000     F                      CALL   ?rec_param
              ; SOURCE LINE # 132 
003F 2007                              JRA    ?NXT_0012
0041         ?CASE_0009:
              ; SOURCE LINE # 135 
0041 2005                              JRA    ?NXT_0012
0043         ?DEFAULT_0001:
              ; SOURCE LINE # 138 
0043 CD0000     F                      CALL   ?nocommand
              ; SOURCE LINE # 139 
0046 2000                              JRA    ?NXT_0012
0048         ?NXT_0012:

0048         ?NXT_0011:

0048         ?EPILOG_0005:

0048         ?NXT_0013:
0048 85                                POPW   X
0049 BF02       F                      LDW    ?BH.w,X
004B 85                                POPW   X
004C BF03       F                      LDW    ?CH.w,X
004E 80                                IRET   

              ; FUNCTION ?USART1_RX_Interrupt (END)

              ; FUNCTION ?rec_pref (BEGIN)
              ; SOURCE LINE # 150 
0000 A631                              LD     A,#031H
0002 B100       F                      CP     A,temp
0004 2614                              JRNE   ?ELSE_0007
              ; SOURCE LINE # 152 
0006 5F                                CLRW   X
0007 C60000     F                      LD     A,RxPointer
000A 97                                LD     XL,A
000B B600       F                      LD     A,temp
000D D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 153 
0010 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 154 
0014 35010000   F                      MOV    RxStatus,#001H
0018 2003                              JRA    ?NXT_0015
001A         ?ELSE_0007:
              ; SOURCE LINE # 157 
001A CD0000     F                      CALL   ?nocommand
001D         ?NXT_0015:

001D         ?EPILOG_0006:
001D 81                                RET    

              ; FUNCTION ?rec_pref (END)

              ; FUNCTION ?rec_addr (BEGIN)
              ; SOURCE LINE # 166 
0000 5F                                CLRW   X
0001 B600       F                      LD     A,temp
0003 97                                LD     XL,A
0004 89                                PUSHW  X
0005 AE00FF                            LDW    X,#000FFH
0008 9085                              POPW   Y
000A 90BF02     F                      LDW    ?BH.w,Y
000D B302       F                      CPW    X,?BH.w
000F 2706                              JREQ   ?LAB_0003
0011 B600       F                      LD     A,temp
0013 B100       F                      CP     A,NetAddr
0015 2614                              JRNE   ?ELSE_0010
0017         ?LAB_0003:
              ; SOURCE LINE # 168 
0017 5F                                CLRW   X
0018 C60000     F                      LD     A,RxPointer
001B 97                                LD     XL,A
001C B600       F                      LD     A,temp
001E D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 169 
0021 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 170 
0025 35020000   F                      MOV    RxStatus,#002H
0029 2021                              JRA    ?NXT_0018
002B         ?ELSE_0010:
              ; SOURCE LINE # 174 
002B A631                              LD     A,#031H
002D B100       F                      CP     A,temp
002F 2618                              JRNE   ?ELSE_0011
              ; SOURCE LINE # 176 
0031 35000000   F                      MOV    RxPointer,#000H
              ; SOURCE LINE # 177 
0035 5F                                CLRW   X
0036 C60000     F                      LD     A,RxPointer
0039 97                                LD     XL,A
003A B600       F                      LD     A,temp
003C D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 178 
003F 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 179 
0043 35010000   F                      MOV    RxStatus,#001H
0047 2003                              JRA    ?NXT_0019
0049         ?ELSE_0011:
              ; SOURCE LINE # 182 
0049 CD0000     F                      CALL   ?nocommand
004C         ?NXT_0019:

004C         ?NXT_0018:

004C         ?EPILOG_0007:
004C 81                                RET    

              ; FUNCTION ?rec_addr (END)

              ; FUNCTION ?rec_command (BEGIN)
              ; SOURCE LINE # 188 
0000 88                                PUSH   A
              ; SOURCE LINE # 192 
0001 A600                              LD     A,#000H
0003 6B01       F                      LD     (001H,SP),A   ; [ i ]
0005         ?WHILE_0005:
              ; SOURCE LINE # 193 
0005 5F                                CLRW   X
0006 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0008 97                                LD     XL,A
0009 A600                              LD     A,#000H
000B D10000     F                      CP     A,(COMMANDLIST + 00H,X)
000E 273E                              JREQ   ?NXT_0023
              ; SOURCE LINE # 195 
0010 5F                                CLRW   X
0011 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0013 97                                LD     XL,A
0014 B600       F                      LD     A,temp
0016 D10000     F                      CP     A,(COMMANDLIST + 00H,X)
0019 2627                              JRNE   ?ELSE_0014
              ; SOURCE LINE # 197 
001B 5F                                CLRW   X
001C 7B01       F                      LD     A,(001H,SP)   ; [ i ]
001E 97                                LD     XL,A
001F 1C0001                            ADDW   X,#00001H
0022 1C0000     F                      ADDW   X,#COMMANDLIST
0025 F6                                LD     A,(X)
0026 B700       F                      LD     plen,A
              ; SOURCE LINE # 198 
0028 A6FD                              LD     A,#0FDH
002A BB00       F                      ADD    A,plen
002C B700       F                      LD     RxCount,A
              ; SOURCE LINE # 199 
002E 5F                                CLRW   X
002F C60000     F                      LD     A,RxPointer
0032 97                                LD     XL,A
0033 B600       F                      LD     A,temp
0035 D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 200 
0038 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 201 
003C 35030000   F                      MOV    RxStatus,#003H
              ; SOURCE LINE # 202 
0040 200C                              JRA    ?NXT_0023
0042         ?ELSE_0014:
              ; SOURCE LINE # 204 
0042 A602                              LD     A,#002H
0044 1B01       F                      ADD    A,(001H,SP)   ; [ i ]
0046 B703       F                      LD     ?BH,A
0048 B603       F                      LD     A,?BH
004A 6B01       F                      LD     (001H,SP),A   ; [ i ]
004C 20B7                              JRA    ?WHILE_0005
004E         ?NXT_0023:
              ; SOURCE LINE # 207 
004E A603                              LD     A,#003H
0050 B100       F                      CP     A,RxStatus
0052 2707                              JREQ   ?NXT_0025
              ; SOURCE LINE # 210 
0054 35000000   F                      MOV    RxCount,#000H
              ; SOURCE LINE # 211 
0058 CD0000     F                      CALL   ?clearRxBuff
005B         ?NXT_0025:

005B         ?EPILOG_0008:
005B 84                                POP    A
005C 81                                RET    
              ; i            unsigned char  (size=1). Automatic variable  in AUTO

              ; FUNCTION ?rec_command (END)

              ; FUNCTION ?rec_param (BEGIN)
              ; SOURCE LINE # 221 
0000 5F                                CLRW   X
0001 C60000     F                      LD     A,RxPointer
0004 97                                LD     XL,A
0005 B600       F                      LD     A,temp
0007 D70000     F                      LD     (RxBuffer + 00H,X),A
              ; SOURCE LINE # 222 
000A 725C0000   F                      INC    RxPointer
              ; SOURCE LINE # 223 
000E 3A00       F                      DEC    RxCount
              ; SOURCE LINE # 224 
0010 3D00       F                      TNZ    RxCount
0012 260A                              JRNE   ?NXT_0027
              ; SOURCE LINE # 226 
0014 35040000   F                      MOV    RxStatus,#004H
              ; SOURCE LINE # 227 
0018 A6FF                              LD     A,#0FFH
001A BB00       F                      ADD    A,plen
001C B700       F                      LD     Comm_Len,A
001E         ?NXT_0027:

001E         ?EPILOG_0009:
001E 81                                RET    

              ; FUNCTION ?rec_param (END)

              ; FUNCTION ?nocommand (BEGIN)
              ; SOURCE LINE # 234 
0000 72110000   F                      BRES   F_Comm
              ; SOURCE LINE # 235 
0004 35000000   F                      MOV    RxCount,#000H
              ; SOURCE LINE # 236 
0008 35000000   F                      MOV    RxStatus,#000H
              ; SOURCE LINE # 237 
000C CD0000     F                      CALL   ?clearRxBuff
000F         ?EPILOG_0010:
000F 81                                RET    

              ; FUNCTION ?nocommand (END)

RCSTM8 COMPILER V2.28.10.092
NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

PA_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005000H 1      
PA_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005001H 1      
PA_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005002H 1      
PA_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005003H 1      
PA_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005004H 1      
PB_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005005H 1      
PB_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005006H 1      
PB_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005007H 1      
PB_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005008H 1      
PB_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005009H 1      
PC_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500AH 1      
PC_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500BH 1      
PC_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500CH 1      
PC_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500DH 1      
PC_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500EH 1      
PD_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500FH 1      
PD_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005010H 1      
PD_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005011H 1      
PD_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005012H 1      
PD_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005013H 1      
PE_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005014H 1      
PE_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005015H 1      
PE_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005016H 1      
PE_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005017H 1      
PE_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005018H 1      
PF_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005019H 1      
PF_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501AH 1      
PF_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501BH 1      
PF_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501CH 1      
PF_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501DH 1      
FLASH_CR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005050H 1      
FLASH_CR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005051H 1      
FLASH_PUKR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005052H 1      
FLASH_DUKR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005053H 1      
FLASH_IAPSR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005054H 1      
DMA1_GCSR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005070H 1      
DMA1_GIR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005071H 1      
DMA1_C0CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005075H 1      
DMA1_C0SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005076H 1      
DMA1_C0NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005077H 1      
DMA1_C0PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005078H 2      
DMA1_C0PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005078H 1      
DMA1_C0PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005079H 1      
DMA1_C0M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00507BH 2      
DMA1_C0M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507BH 1      
DMA1_C0M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507CH 1      
DMA1_C1CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507FH 1      
DMA1_C1SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005080H 1      
DMA1_C1NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005081H 1      
DMA1_C1PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005082H 2      
DMA1_C1PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005082H 1      
DMA1_C1PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005083H 1      
DMA1_C1M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005085H 2      
DMA1_C1M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005085H 1      
DMA1_C1M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005086H 1      
DMA1_C2CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005089H 1      
DMA1_C2SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508AH 1      
DMA1_C2NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508BH 1      
DMA1_C2PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00508CH 2      
DMA1_C2PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508CH 1      
DMA1_C2PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508DH 1      
DMA1_C2M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00508FH 2      
DMA1_C2M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508FH 1      
DMA1_C2M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005090H 1      
DMA1_C3CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005093H 1      
DMA1_C3SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005094H 1      
DMA1_C3NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005095H 1      
DMA1_C3PAR_C3M1AR. . . . . . . . . . .  HREG16   hreg16  U_INT   005096H 2      
DMA1_C3PARH_C3M1ARH. . . . . . . . . .  HREG     hreg    U_CHAR  005096H 1      
DMA1_C3PARL_C3M1ARL. . . . . . . . . .  HREG     hreg    U_CHAR  005097H 1      
DMA1_C3M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005099H 2      
DMA1_C3M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005099H 1      
DMA1_C3M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509AH 1      
SYSCFG_RMPCR1. . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509EH 1      
SYSCFG_RMPCR2. . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509FH 1      
EXTI_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A0H 1      
EXTI_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A1H 1      
EXTI_CR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A2H 1      
EXTI_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A3H 1      
EXTI_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A4H 1      
EXTI_CONF. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A5H 1      
WFE_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A6H 1      
WFE_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A7H 1      
WFE_CR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A8H 1      
RST_CR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B0H 1      
RST_SR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B1H 1      
PWR_CSR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B2H 1      
PWR_CSR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B3H 1      
CLK_CKDIVR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C0H 1      
CLK_CRTCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C1H 1      
CLK_ICKCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C2H 1      
CLK_PCKENR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C3H 1      
CLK_PCKENR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C4H 1      
CLK_CCOR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C5H 1      
CLK_ECKCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C6H 1      
CLK_SCSR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C7H 1      
CLK_SWR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C8H 1      
CLK_SWCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C9H 1      
CLK_CSSR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CAH 1      
CLK_CBEEPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CBH 1      
CLK_HSICALR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CCH 1      
CLK_HSITRIMR . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CDH 1      
CLK_HSIUNLCKR. . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CEH 1      
CLK_REGCSR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CFH 1      
WWDG_CR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050D3H 1      
WWDG_WR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050D4H 1      
IWDG_KR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E0H 1      
IWDG_PR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E1H 1      
IWDG_RLR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E2H 1      
BEEP_CSR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050F0H 1      
BEEP_CSR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050F3H 1      
RTC_TR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005140H 1      
RTC_TR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005141H 1      
RTC_TR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005142H 1      
RTC_DR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005144H 1      
RTC_DR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005145H 1      
RTC_DR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005146H 1      
RTC_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005148H 1      
RTC_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005149H 1      
RTC_CR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514AH 1      
RTC_ISR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514CH 1      
RTC_ISR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514DH 1      
RTC_SPRER. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005150H 2      
RTC_SPRERH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005150H 1      
RTC_SPRERL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005151H 1      
RTC_APRER. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005152H 1      
RTC_WUTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005154H 2      
RTC_WUTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005154H 1      
RTC_WUTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005155H 1      
RTC_WPR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005159H 1      
RTC_ALRMAR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515CH 1      
RTC_ALRMAR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515DH 1      
RTC_ALRMAR3. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515EH 1      
RTC_ALRMAR4. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515FH 1      
SPI1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005200H 1      
SPI1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005201H 1      
SPI1_ICR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005202H 1      
SPI1_SR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005203H 1      
SPI1_DR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005204H 1      
SPI1_CRCPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005205H 1      
SPI1_RXCRCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005206H 1      
SPI1_TXCRCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005207H 1      
I2C1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005210H 1      
I2C1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005211H 1      
I2C1_FREQR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005212H 1      
I2C1_OARL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005213H 1      
I2C1_OARH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005214H 1      
I2C1_DR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005216H 1      
I2C1_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005217H 1      
I2C1_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005218H 1      
I2C1_SR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005219H 1      
I2C1_ITR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521AH 1      
I2C1_CCRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521BH 1      
I2C1_CCRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521CH 1      
I2C1_TRISER. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521DH 1      
I2C1_PECR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521EH 1      
USART1_SR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005230H 1      
USART1_DR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005231H 1      
USART1_BRR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005232H 1      
USART1_BRR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005233H 1      
USART1_CR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005234H 1      
USART1_CR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005235H 1      
USART1_CR3 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005236H 1      
USART1_CR4 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005237H 1      
USART1_CR5 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005238H 1      
USART1_GTR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005239H 1      
USART1_PSCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00523AH 1      
TIM2_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005250H 1      
TIM2_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005251H 1      
TIM2_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005252H 1      
TIM2_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005253H 1      
TIM2_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005254H 1      
TIM2_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005255H 1      
TIM2_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005256H 1      
TIM2_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005257H 1      
TIM2_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005258H 1      
TIM2_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005259H 1      
TIM2_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525AH 1      
TIM2_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525BH 1      
TIM2_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00525CH 2      
TIM2_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525CH 1      
TIM2_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525DH 1      
TIM2_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525EH 1      
TIM2_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00525FH 2      
TIM2_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525FH 1      
TIM2_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005260H 1      
TIM2_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005261H 2      
TIM2_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005261H 1      
TIM2_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005262H 1      
TIM2_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005263H 2      
TIM2_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005263H 1      
TIM2_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005264H 1      
TIM2_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005265H 1      
TIM2_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005266H 1      
TIM3_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005280H 1      
TIM3_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005281H 1      
TIM3_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005282H 1      
TIM3_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005283H 1      
TIM3_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005284H 1      
TIM3_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005285H 1      
TIM3_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005286H 1      
TIM3_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005287H 1      
TIM3_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005288H 1      
TIM3_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005289H 1      
TIM3_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528AH 1      
TIM3_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528BH 1      
TIM3_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00528CH 2      
TIM3_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528CH 1      
TIM3_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528DH 1      
TIM3_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528EH 1      
TIM3_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00528FH 2      
TIM3_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528FH 1      
TIM3_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005290H 1      
TIM3_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005291H 2      
TIM3_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005291H 1      
TIM3_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005292H 1      
TIM3_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005293H 2      
TIM3_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005293H 1      
TIM3_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005294H 1      
TIM3_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005295H 1      
TIM3_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005296H 1      
TIM1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B0H 1      
TIM1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B1H 1      
TIM1_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B2H 1      
TIM1_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B3H 1      
TIM1_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B4H 1      
TIM1_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B5H 1      
TIM1_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B6H 1      
TIM1_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B7H 1      
TIM1_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B8H 1      
TIM1_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B9H 1      
TIM1_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BAH 1      
TIM1_CCMR3 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BBH 1      
TIM1_CCMR4 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BCH 1      
TIM1_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BDH 1      
TIM1_CCER2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BEH 1      
TIM1_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052BFH 2      
TIM1_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BFH 1      
TIM1_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C0H 1      
TIM1_PSCR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C1H 2      
TIM1_PSCRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C1H 1      
TIM1_PSCRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C2H 1      
TIM1_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C3H 2      
TIM1_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C3H 1      
TIM1_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C4H 1      
TIM1_RCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C5H 1      
TIM1_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C6H 2      
TIM1_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C6H 1      
TIM1_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C7H 1      
TIM1_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C8H 2      
TIM1_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C8H 1      
TIM1_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C9H 1      
TIM1_CCR3. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052CAH 2      
TIM1_CCR3H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CAH 1      
TIM1_CCR3L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CBH 1      
TIM1_CCR4. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052CCH 2      
TIM1_CCR4H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CCH 1      
TIM1_CCR4L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CDH 1      
TIM1_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CEH 1      
TIM1_DTR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CFH 1      
TIM1_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D0H 1      
TIM1_DCR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D1H 1      
TIM1_DCR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D2H 1      
TIM1_DMAR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D3H 1      
TIM4_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E0H 1      
TIM4_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E1H 1      
TIM4_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E2H 1      
TIM4_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E3H 1      
TIM4_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E4H 1      
TIM4_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E5H 1      
TIM4_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E6H 1      
TIM4_CNTR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E7H 1      
TIM4_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E8H 1      
TIM4_ARR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E9H 1      
IR_CR. . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052FFH 1      
ADC1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005340H 1      
ADC1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005341H 1      
ADC1_CR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005342H 1      
ADC1_SR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005343H 1      
ADC1_DR. . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005344H 2      
ADC1_DRH . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005344H 1      
ADC1_DRL . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005345H 1      
ADC1_HTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005346H 2      
ADC1_HTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005346H 1      
ADC1_HTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005347H 1      
ADC1_LTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005348H 2      
ADC1_LTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005348H 1      
ADC1_LTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005349H 1      
ADC1_SQR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534AH 1      
ADC1_SQR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534BH 1      
ADC1_SQR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534CH 1      
ADC1_SQR4. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534DH 1      
ADC1_TRIGR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534EH 1      
ADC1_TRIGR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534FH 1      
ADC1_TRIGR3. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005350H 1      
ADC1_TRIGR4. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005351H 1      
DAC_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005380H 1      
DAC_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005381H 1      
DAC_SWTRIGR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005384H 1      
DAC_SR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005385H 1      
DAC_RDHR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005388H 2      
DAC_RDHRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005388H 1      
DAC_RDHRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005389H 1      
DAC_LDHR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00538CH 2      
DAC_LDHRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00538CH 1      
DAC_LDHRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00538DH 1      
DAC_DHR8 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005390H 1      
DAC_DOR. . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0053ACH 2      
DAC_DORH . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0053ACH 1      
DAC_DORL . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0053ADH 1      
RI_ICR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005431H 1      
RI_ICR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005432H 1      
RI_IOIR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005433H 1      
RI_IOIR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005434H 1      
RI_IOIR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005435H 1      
RI_IOCMR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005436H 1      
RI_IOCMR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005437H 1      
RI_IOCMR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005438H 1      
RI_IOSR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005439H 1      
RI_IOSR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543AH 1      
RI_IOSR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543BH 1      
RI_IOGCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543CH 1      
RI_ASCR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543DH 1      
RI_ASCR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543EH 1      
RI_RCR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543FH 1      
COMP_CSR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005440H 1      
COMP_CSR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005441H 1      
COMP_CSR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005442H 1      
COMP_CSR4. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005443H 1      
COMP_CSR5. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005444H 1      
CFG_GCR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F60H 1      
ITC_SPR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F70H 1      
ITC_SPR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F71H 1      
ITC_SPR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F72H 1      
ITC_SPR4 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F73H 1      
ITC_SPR5 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F74H 1      
ITC_SPR6 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F75H 1      
ITC_SPR7 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F76H 1      
ITC_SPR8 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F77H 1      
_fctptr_t. . . . . . . . . . . . . . .  TYPEDEF ------- PTR   -------      2
_halt_ . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_jmp_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_nop_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_rim_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_sim_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_trap_ . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_wfe_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_wfi_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_getCC_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_setCC_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_getSP_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_setSP_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_swapbyte_ . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_swapnibble_ . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
size_t . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     2
fmemcpy. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
lstrlen. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
lmemcpy. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
lmemset. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memccpy. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memchr . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memcmp . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memcpy . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memmove. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memset . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strcat . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strchr . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strcmp . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strcpy . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strcspn. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strlen . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strncat. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strncmp. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strncpy. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strpbrk. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strpos . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strrchr. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strrpos. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strspn . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strstr . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strtok . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strxfrm. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
DWORD. . . . . . . . . . . . . . . . .  TYPEDEF ------- ????? -------      4
WORD . . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     2
BYTE . . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     1
delay. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
setWKUP. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
Voltage. . . . . . . . . . . . . . . .  EXTERN  page0   U_INT   ------- -----
Mtime. . . . . . . . . . . . . . . . .  EXTERN  page0   U_INT   ------- -----
PulseNL. . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
PulseNH. . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
PulseCount . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
Imeas. . . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
Pulse. . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
initUART . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
putpack. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
clearRxBuff. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
RxBuffer . . . . . . . . . . . . . . .  EXTERN  data    ARRAY   ------- -----
TxBuffer . . . . . . . . . . . . . . .  EXTERN  data    ARRAY   ------- -----
Comm_Len . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxStatus . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxCount. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
plen . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
TxCount. . . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
TxPointer. . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
RxPointer. . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
TxBusy . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
TXE. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029187H 1      
TC . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029186H 1      
RXNE . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029185H 1      
IDLE . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029184H 1      
OR . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029183H 1      
NF . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029182H 1      
FE . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029181H 1      
PE . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     029180H 1      
R8 . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A7H 1      
T8 . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A6H 1      
USARTD . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A5H 1      
M. . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A4H 1      
WAKE . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A3H 1      
PCEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A2H 1      
PS . . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A1H 1      
PIEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A0H 1      
TIEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291AFH 1      
TCIEN. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291AEH 1      
RIEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291ADH 1      
ILIEN. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291ACH 1      
TEN. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291ABH 1      
REN. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291AAH 1      
RWU. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A9H 1      
SBK. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291A8H 1      
STOP1. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B5H 1      
STOP0. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B4H 1      
CLKEN. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B3H 1      
CPOL . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B2H 1      
CPHA . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B1H 1      
LBCL . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291B0H 1      
DMAT . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C7H 1      
DMAR . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C6H 1      
SCEN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C5H 1      
NACK . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C4H 1      
HDSEL. . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C3H 1      
IRLP . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C2H 1      
IREN . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C1H 1      
EIE. . . . . . . . . . . . . . . . . .  HBIT     bit     BIT     0291C0H 1      
checkpacket. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
handlecommand. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CRC. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
TxCRC. . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxCRC. . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
F_Comm . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
Command. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
NetAddr. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
COMMANDLIST. . . . . . . . . . . . . .  EXTERN  code    ARRAY   ------- -----
initIO . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
blink. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
LED_set. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
DE_set . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
Pulse_Set. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CheckCmp . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
temp . . . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000000H 1      
initUART . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
putstr . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
putpack. . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
clearRxBuff. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
rec_pref . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
rec_addr . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
rec_command. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
rec_param. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
nocommand. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
RxBuffer . . . . . . . . . . . . . . .  PUBLIC  data    ARRAY   000000H 128    
TxBuffer . . . . . . . . . . . . . . .  PUBLIC  data    ARRAY   000080H 128    
Comm_Len . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000001H 1      
RxStatus . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000002H 1      
RxCount. . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000003H 1      
plen . . . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000004H 1      
TxCount. . . . . . . . . . . . . . . .  PUBLIC  data    U_CHAR  000100H 1      
TxPointer. . . . . . . . . . . . . . .  PUBLIC  data    U_CHAR  000101H 1      
RxPointer. . . . . . . . . . . . . . .  PUBLIC  data    U_CHAR  000102H 1      
TxBusy . . . . . . . . . . . . . . . .  PUBLIC  bit     BIT     000000H 1      
initUART . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  i?170. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
putstr . . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 Addr?168. . . . . . . . . . . . . . .  PARAM    auto    PTR     000001H 2      
  i?170. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
putpack. . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 c?171 . . . . . . . . . . . . . . . .  PARAM    auto    U_CHAR  000000H 1      
clearRxBuff. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
USART1_TX_Interrupt. . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
USART1_RX_Interrupt. . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
rec_pref . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
rec_addr . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  i?181. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
rec_command. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  i?181. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
rec_param. . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
nocommand. . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
F_Comm . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
?BH. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
?CH. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
NetAddr. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
COMMANDLIST. . . . . . . . . . . . . .  EXTERN  code    ARRAY   ------- -----
RCSTM8 COMPILER V2.28.10.092


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    524    ----
   CONSTANT SIZE    =      8    ----
   DATA SIZE        =    259    ----
   PAGE0 SIZE       =      5    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.

RCSTM8 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
