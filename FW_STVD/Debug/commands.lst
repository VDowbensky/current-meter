RCSTM8 COMPILER V2.28.10.092,  COMMANDS           05/14/19  16:28:51

QCW(0x009638A0)

RCSTM8 COMPILER V2.28.10.092, COMPILATION OF MODULE COMMANDS  
OBJECT MODULE PLACED IN Debug\commands.o
COMPILER INVOKED BY: OBJECT(Debug\commands.o) PIN(C:\Program Files (x86)\Raisonance\Ride\inc\STM8) PIN(C:\Program Files (x86)\Raisonance\Ride\inc\ST7) PIN(C:\Program Files (x86)\Raisonance\Ride\inc) DGC(page0) AUTO WRV(0) PR(Debug\commands.lst) CD CO SB OT(0) DEBUG STM8(SMALL) 

stmt level    source
   1          #include "commands.h"
   2          #include "uart.h"
   3          #include "timers.h"
   4          #include "eeprom.h"
   5          #include "gpio.h"
   6          #include "dac.h"
   7          #include "global.h"
   8          #include "ecma0896.h"
   9          
  10          
  11          void compCRC (BYTE crcCount);
  12          void comp_crc (BYTE b);
  13          void checkpacket (BYTE packlen);
  14          void handlecommand(void);
  15          
  16          void sendpacket(BYTE txcount);
  17          void sendOKresponse(void);
  18          void sendERRresponse(void);
  19          
  20          BYTE CRC;
  21          BYTE TxCRC;
  22          BYTE RxCRC;
  23          bit F_Comm;
  24          BYTE Command;
  25          BYTE NetAddr = 1;
  26          
  27          bit TuneMode;
  28          bit F_Comm;
  29          bit Lister;
  30          
  31          
  32          
  33          //code const BYTE COMMANDLIST[] = {C_READONCE,9, C_READCONT,9, TC_ENTRY,4, 0,0};
  34          //code const BYTE TUNELIST[] = {TC_RD_SN,4, TC_RD_CONFIG,4, TC_WR_CONFIG,5, TC_RD_OFFSET,4, 
  35          //TC_WR_OFFSET,6, TC_RD_VTUNE,4, TC_WR_VTUNE,5, TC_WRDAC12,6, TC_WRDAC8,5, TC_RD_GAIN,4, TC_WR_GAIN,5, TC_WR_DEFAULT,
  36          //4, TC_WR_SN,10, TC_RESET_SN,8, TC_EXIT,4, 0, 0};
  37          
  38          code const BYTE COMMANDLIST[] = {DATA_READ,4, CAL_READ,4, CAL_SET,12, VT_READ,4, VT_SET,8, 0,0};
  39          
  40          
  41          void compCRC (BYTE crcCount)
  42          {  	
  43   1      	BYTE i;
  44   1      	CRC=0;
  45   1      	for (i=0; i<(crcCount); i++)
  46   1      	{
  47   2      		comp_crc(TxBuffer[i]);
  48   2      		TxCRC=CRC;
  49   2      	}
  50   1      
  51   1      }//CompCRC
  52          
  53          
  54          void comp_crc (BYTE b)
  55          {
  56   1      	BYTE j;
  57   1      	for (j=8; j>0; j--)
  58   1      	{
  59   2      		if ( (b ^ CRC) & 0x01) 
  60   2      		{ 
  61   3            	CRC = ( (CRC ^ CRCPOLY) >> 1 ) | 0x80; 
  62   3          	} 
  63   2      		else 
  64   2      		{ 
  65   3            	CRC >>= 1; 
  66   3          	} 
  67   2          	b >>= 1;
  68   2      	}
  69   1      }//comp_crc
  70          
  71          void checkpacket (BYTE packlen)
  72          {
  73   1       	BYTE i;
  74   1      	//RxCRC = 0;
  75   1      	CRC=0;
  76   1      	for (i=0; i<packlen; i++)	
  77   1      	{
  78   2      	comp_crc (RxBuffer[i]);
  79   2      	RxCRC = CRC;
  80   2      	}
  81   1      	if (RxCRC == RxBuffer[packlen]) 
  82   1      	{
  83   2      	F_Comm = 1;
  84   2      	Command = RxBuffer[2];
  85   2      	}
  86   1      	else clearRxBuff();
  87   1      	
  88   1      } 
  89          
  90          void handlecommand(void)
  91          {	 	
  92   1      		F_Comm = 0;
  93   1      		RxStatus = 0;
  94   1      		//Command=RxBuffer[2];
  95   1      		switch (Command)
  96   1      		{
  97   2      		case DATA_READ:
  98   2      		TxBuffer[3] = LOWL(PulseCount);
  99   2      		TxBuffer[4] = LOWH(PulseCount);
 100   2      		TxBuffer[5] = HIGL(PulseCount);
 101   2      		TxBuffer[6] = HIGH(PulseCount);
 102   2      		TxBuffer[7] = LOWL(Imeas);
 103   2      		TxBuffer[8] = LOWH(Imeas);
 104   2      		TxBuffer[9] = HIGL(Imeas);
 105   2      		TxBuffer[10] = HIGH(Imeas);
 106   2      		sendpacket(11);
 107   2      		break;
 108   2      		
 109   2      		case VT_READ:
 110   2      		TxBuffer[3] = LO(Voltage);
 111   2      		TxBuffer[4] = HI(Voltage);
 112   2      		TxBuffer[5] = LO(Mtime);
 113   2      		TxBuffer[6] = HI(Mtime);
 114   2      		sendpacket(7);
 115   2      		break;
 116   2      		
 117   2      		case VT_SET: //store and accept readed parameters
 118   2      		{
 119   3      		DWORD t1, t2, t3;
 120   3      		ee_read();
 121   3      		//EEbuffer[0] = RxBuffer[3];
 122   3      		//EEbuffer[1] = RxBuffer[4];
 123   3      		t1 = (RxBuffer[4]<<8)+RxBuffer[3];
 124   3      		t3 = t1;
 125   3      		t2 = (t1*4096)/VREF;
 126   3      		if (t2 > 4095)
 127   3      		{		
 128   4      		t2 = 4095; //check for DAC overflow
 129   4      		t1 = (t2*VREF)/4096;
 130   4      		}
 131   3      		else t1 = t3; //no change
 132   3      		EEbuffer[0] = LO(t1);
 133   3      		EEbuffer[1] = HI(t1);
 134   3      		EEbuffer[2] = RxBuffer[5];
 135   3      		EEbuffer[3] = RxBuffer[6];
 136   3      		ee_pgm();
 137   3      		readparameters();
 138   3      		setWKUP();
 139   3      		updateDAC(Voltage);
 140   3      		//update time on LCD
 141   3      		updTime(Mtime);
 142   3      		sendOKresponse();
 143   3      		break; 
 144   3      		}
 145   2      		
 146   2      		case CAL_READ:
 147   2      		TxBuffer[3] = LOWL(PulseNL);
 148   2      		TxBuffer[4] = LOWH(PulseNL);
 149   2      		TxBuffer[5] = HIGL(PulseNL);
 150   2      		TxBuffer[6] = HIGH(PulseNL);
 151   2      		TxBuffer[7] = LOWL(PulseNH);
 152   2      		TxBuffer[8] = LOWH(PulseNH);
 153   2      		TxBuffer[9] = HIGL(PulseNH);
 154   2      		TxBuffer[10] = HIGH(PulseNH);
 155   2      		sendpacket(11);
 156   2      		break;
 157   2      		
 158   2      		case CAL_SET:
 159   2      		//store and accept readed parameters
 160   2      		ee_read();
 161   2      		EEbuffer[4] = RxBuffer[3];
 162   2      		EEbuffer[5] = RxBuffer[4];
 163   2      		EEbuffer[6] = RxBuffer[5];
 164   2      		EEbuffer[7] = RxBuffer[6];
 165   2      		EEbuffer[8] = RxBuffer[7];
 166   2      		EEbuffer[9] = RxBuffer[8];
 167   2      		EEbuffer[10] = RxBuffer[9];
 168   2      		EEbuffer[11] = RxBuffer[10];
 169   2      		ee_pgm();
 170   2      		readparameters();
 171   2      		//temporary
 172   2      		//DACvalue = Voltage;
 173   2      		//updateDAC();
 174   2      		sendOKresponse();
 175   2      		break;
 176   2      	
 177   2      		
 178   2      		default:
 179   2      		break;	//nothing to do
 180   2      
 181   2      		}//switch (Command)
 182   1      		clearRxBuff();
 183   1      		//else
 184   1      } //void EDEhandle(void)
 185          	
 186          
 187          void sendpacket(BYTE txcount)
 188          {
 189   1      		TxBuffer[0]=TXPREFIX;
 190   1      		TxBuffer[1]=NetAddr;//Net Addtess
 191   1      		TxBuffer[2]=Command;
 192   1      		//other fields are filled in command handler
 193   1      		compCRC(txcount);
 194   1      		TxBuffer[txcount]=TxCRC;
 195   1      		RxPointer=0;
 196   1      		putpack(txcount);
 197   1      		clearRxBuff();//RxFlag=0;//command executed
 198   1      
 199   1      }
 200          void sendOKresponse(void)
 201          {		TxBuffer[3]=0;
 202   1      		sendpacket(4);
 203   1      		//blink(2);
 204   1      }
 205          
 206          void sendERRresponse(void)
 207          {		TxBuffer[3]=1;
 208   1      		sendpacket(4);
 209   1      		//blink(3);
 210   1      }
 211          
 212          
RCSTM8 COMPILER V2.28.10.092
ASSEMBLY LISTING OF GENERATED OBJECT CODE

              ; FUNCTION ?compCRC (BEGIN)
              ; Register-parameter crcCount (A) is relocated (auto)
              ; SOURCE LINE # 41 
0000 88                                PUSH   A
0001 88                                PUSH   A
              ; SOURCE LINE # 44 
0002 35000000   F                      MOV    CRC,#000H
              ; SOURCE LINE # 45 
0006 A600                              LD     A,#000H
0008 6B01       F                      LD     (001H,SP),A   ; [ i ]
000A         ?FOR_0001:
000A 7B01       F                      LD     A,(001H,SP)   ; [ i ]
000C 1102       F                      CP     A,(002H,SP)   ; [ crcCount ]
000E 2413                              JRUGE  ?NXT_0002
              ; SOURCE LINE # 47 
0010 5F                                CLRW   X
0011 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0013 97                                LD     XL,A
0014 D60000     F                      LD     A,(TxBuffer + 00H,X)
0017 CD0000     F                      CALL   ?comp_crc
              ; SOURCE LINE # 48 
001A 450000     F                      MOV    TxCRC,CRC
001D         ?NXT_0003:
              ; SOURCE LINE # 45 
001D 7B01       F                      LD     A,(001H,SP)   ; [ i ]
001F 0C01       F                      INC    (001H,SP)   ; [ i ]
0021 20E7                              JRA    ?FOR_0001
0023         ?NXT_0002:

0023         ?EPILOG_0000:
0023 85                                POPW   X
0024 81                                RET    
              ; crcCount     unsigned char  (size=1).  parameter in AUTO
              ; i            unsigned char  (size=1). Automatic variable  in AUTO

              ; FUNCTION ?compCRC (END)

              ; FUNCTION ?comp_crc (BEGIN)
              ; Register-parameter b (A) is relocated (auto)
              ; SOURCE LINE # 54 
0000 88                                PUSH   A
0001 88                                PUSH   A
              ; SOURCE LINE # 57 
0002 A608                              LD     A,#008H
0004 6B01       F                      LD     (001H,SP),A   ; [ j ]
0006         ?FOR_0003:
0006 A600                              LD     A,#000H
0008 1101       F                      CP     A,(001H,SP)   ; [ j ]
000A 2459                              JRUGE  ?NXT_0007
              ; SOURCE LINE # 59 
000C 5F                                CLRW   X
000D B600       F                      LD     A,CRC
000F 97                                LD     XL,A
0010 89                                PUSHW  X
0011 5F                                CLRW   X
0012 7B04       F                      LD     A,(004H,SP)   ; [ b ]
0014 97                                LD     XL,A
0015 BF02       F                      LDW    ?BH.w,X
0017 85                                POPW   X
0018 BF03       F                      LDW    ?CH.w,X
001A B606       F                      LD     A,?CL
001C B804       F                      XOR    A,?BL
001E 88                                PUSH   A
001F B605       F                      LD     A,?CH
0021 B803       F                      XOR    A,?BH
0023 B703       F                      LD     ?BH,A
0025 84                                POP    A
0026 B704       F                      LD     ?BL,A
0028 7201000421 F                      BTJF   ?BL,#000H,?ELSE_0001
              ; SOURCE LINE # 61 
002D 5F                                CLRW   X
002E B600       F                      LD     A,CRC
0030 97                                LD     XL,A
0031 89                                PUSHW  X
0032 AE0018                            LDW    X,#00018H
0035 BF02       F                      LDW    ?BH.w,X
0037 85                                POPW   X
0038 BF03       F                      LDW    ?CH.w,X
003A B606       F                      LD     A,?CL
003C B804       F                      XOR    A,?BL
003E 88                                PUSH   A
003F B605       F                      LD     A,?CH
0041 B803       F                      XOR    A,?BH
0043 95                                LD     XH,A
0044 84                                POP    A
0045 97                                LD     XL,A
0046 57                                SRAW   X
0047 9F                                LD     A,XL
0048 AA80                              OR     A,#080H
004A B700       F                      LD     CRC,A
004C 2008                              JRA    ?NXT_0009
004E         ?ELSE_0001:
              ; SOURCE LINE # 65 
004E B600       F                      LD     A,CRC
0050 44                                SRL    A
0051 B703       F                      LD     ?BH,A
0053 450300     F                      MOV    CRC,?BH
0056         ?NXT_0009:
              ; SOURCE LINE # 67 
0056 7B02       F                      LD     A,(002H,SP)   ; [ b ]
0058 44                                SRL    A
0059 B703       F                      LD     ?BH,A
005B B603       F                      LD     A,?BH
005D 6B02       F                      LD     (002H,SP),A   ; [ b ]
005F         ?NXT_0008:
              ; SOURCE LINE # 57 
005F 7B01       F                      LD     A,(001H,SP)   ; [ j ]
0061 0A01       F                      DEC    (001H,SP)   ; [ j ]
0063 20A1                              JRA    ?FOR_0003
0065         ?NXT_0007:

0065         ?EPILOG_0001:
0065 85                                POPW   X
0066 81                                RET    
              ; b            unsigned char  (size=1).  parameter in AUTO
              ; j            unsigned char  (size=1). Automatic variable  in AUTO

              ; FUNCTION ?comp_crc (END)

              ; FUNCTION ?checkpacket (BEGIN)
              ; Register-parameter packlen (A) is relocated (auto)
              ; SOURCE LINE # 71 
0000 88                                PUSH   A
0001 88                                PUSH   A
              ; SOURCE LINE # 75 
0002 35000000   F                      MOV    CRC,#000H
              ; SOURCE LINE # 76 
0006 A600                              LD     A,#000H
0008 6B01       F                      LD     (001H,SP),A   ; [ i ]
000A         ?FOR_0005:
000A 7B01       F                      LD     A,(001H,SP)   ; [ i ]
000C 1102       F                      CP     A,(002H,SP)   ; [ packlen ]
000E 2413                              JRUGE  ?NXT_0013
              ; SOURCE LINE # 78 
0010 5F                                CLRW   X
0011 7B01       F                      LD     A,(001H,SP)   ; [ i ]
0013 97                                LD     XL,A
0014 D60000     F                      LD     A,(RxBuffer + 00H,X)
0017 CD0000     F                      CALL   ?comp_crc
              ; SOURCE LINE # 79 
001A 450000     F                      MOV    RxCRC,CRC
001D         ?NXT_0014:
              ; SOURCE LINE # 76 
001D 7B01       F                      LD     A,(001H,SP)   ; [ i ]
001F 0C01       F                      INC    (001H,SP)   ; [ i ]
0021 20E7                              JRA    ?FOR_0005
0023         ?NXT_0013:
              ; SOURCE LINE # 81 
0023 5F                                CLRW   X
0024 7B02       F                      LD     A,(002H,SP)   ; [ packlen ]
0026 97                                LD     XL,A
0027 B600       F                      LD     A,RxCRC
0029 D10000     F                      CP     A,(RxBuffer + 00H,X)
002C 260B                              JRNE   ?ELSE_0003
              ; SOURCE LINE # 83 
002E 72100000   F                      BSET   F_Comm
              ; SOURCE LINE # 84 
0032 5500000000 F                      MOV    Command,RxBuffer + 02H
0037 2003                              JRA    ?NXT_0015
0039         ?ELSE_0003:
              ; SOURCE LINE # 86 
0039 CD0000     F                      CALL   ?clearRxBuff
003C         ?NXT_0015:

003C         ?EPILOG_0002:
003C 85                                POPW   X
003D 81                                RET    
              ; packlen      unsigned char  (size=1).  parameter in AUTO
              ; i            unsigned char  (size=1). Automatic variable  in AUTO

              ; FUNCTION ?checkpacket (END)

              ; FUNCTION ?handlecommand (BEGIN)
              ; SOURCE LINE # 90 
0000 520C                              SUB    SP,#00CH
              ; SOURCE LINE # 92 
0002 72110000   F                      BRES   F_Comm
              ; SOURCE LINE # 93 
0006 35000000   F                      MOV    RxStatus,#000H
              ; SOURCE LINE # 95 
000A 450003     F                      MOV    ?BH,Command
000D B603       F                      LD     A,?BH
000F A1C0                              CP     A,#0C0H
0011 271B                              JREQ   ?CASE_0005
0013         ?LAB_0003:
0013 B603       F                      LD     A,?BH
0015 A0C2                              SUB    A,#0C2H
0017 2603                              JRNE   ?LAB_0004
0019 CC0000     F                      JP     ?CASE_0006
001C         ?LAB_0004:
001C 4A                                DEC    A
001D 2603                              JRNE   ?LAB_0005
001F CC0000     F                      JP     ?CASE_0007
0022         ?LAB_0005:
0022 4A                                DEC    A
0023 277B                              JREQ   ?CASE_0008
0025 4A                                DEC    A
0026 2603                              JRNE   ?LAB_0006
0028 CC0000     F                      JP     ?CASE_0009
002B         ?LAB_0006:

002B         ?LAB_0002:

002B         ?DEFAULT_0001:
              ; SOURCE LINE # 179 
002B CC0000     F                      JP     ?NXT_0018
002E         ?CASE_0005:
              ; SOURCE LINE # 98 
002E 5500000000 F                      MOV    TxBuffer + 03H,PulseCount + 03H
              ; SOURCE LINE # 99 
0033 AE0000     F                      LDW    X,#PulseCount
0036 CD0000     F                      CALL   ?C?mv4_ix2bc
0039 A608                              LD     A,#008H
003B CD0000     F                      CALL   ?C?srl328
003E 5500060000 F                      MOV    TxBuffer + 04H,?CL
              ; SOURCE LINE # 100 
0043 AE0000     F                      LDW    X,#PulseCount
0046 CD0000     F                      CALL   ?C?mv4_ix2bc
0049 A610                              LD     A,#010H
004B CD0000     F                      CALL   ?C?srl328
004E 5500060000 F                      MOV    TxBuffer + 05H,?CL
              ; SOURCE LINE # 101 
0053 AE0000     F                      LDW    X,#PulseCount
0056 CD0000     F                      CALL   ?C?mv4_ix2bc
0059 A618                              LD     A,#018H
005B CD0000     F                      CALL   ?C?srl328
005E 5500060000 F                      MOV    TxBuffer + 06H,?CL
              ; SOURCE LINE # 102 
0063 5500000000 F                      MOV    TxBuffer + 07H,Imeas + 03H
              ; SOURCE LINE # 103 
0068 AE0000     F                      LDW    X,#Imeas
006B CD0000     F                      CALL   ?C?mv4_ix2bc
006E A608                              LD     A,#008H
0070 CD0000     F                      CALL   ?C?srl328
0073 5500060000 F                      MOV    TxBuffer + 08H,?CL
              ; SOURCE LINE # 104 
0078 AE0000     F                      LDW    X,#Imeas
007B CD0000     F                      CALL   ?C?mv4_ix2bc
007E A610                              LD     A,#010H
0080 CD0000     F                      CALL   ?C?srl328
0083 5500060000 F                      MOV    TxBuffer + 09H,?CL
              ; SOURCE LINE # 105 
0088 AE0000     F                      LDW    X,#Imeas
008B CD0000     F                      CALL   ?C?mv4_ix2bc
008E A618                              LD     A,#018H
0090 CD0000     F                      CALL   ?C?srl328
0093 5500060000 F                      MOV    TxBuffer + 0AH,?CL
              ; SOURCE LINE # 106 
0098 A60B                              LD     A,#00BH
009A CD0000     F                      CALL   ?sendpacket
              ; SOURCE LINE # 107 
009D CC0000     F                      JP     ?NXT_0018
00A0         ?CASE_0008:
              ; SOURCE LINE # 110 
00A0 5500000000 F                      MOV    TxBuffer + 03H,Voltage + 01H
              ; SOURCE LINE # 111 
00A5 BE00       F                      LDW    X,Voltage
00A7 4F                                CLR    A
00A8 01                                RRWA   X,A
00A9 9F                                LD     A,XL
00AA C70000     F                      LD     TxBuffer + 04H,A
              ; SOURCE LINE # 112 
00AD 5500000000 F                      MOV    TxBuffer + 05H,Mtime + 01H
              ; SOURCE LINE # 113 
00B2 BE00       F                      LDW    X,Mtime
00B4 4F                                CLR    A
00B5 01                                RRWA   X,A
00B6 9F                                LD     A,XL
00B7 C70000     F                      LD     TxBuffer + 06H,A
              ; SOURCE LINE # 114 
00BA A607                              LD     A,#007H
00BC CD0000     F                      CALL   ?sendpacket
              ; SOURCE LINE # 115 
00BF CC0000     F                      JP     ?NXT_0018
00C2         ?CASE_0009:
              ; SOURCE LINE # 120 
00C2 CD0000     F                      CALL   ?ee_read
              ; SOURCE LINE # 123 
00C5 5F                                CLRW   X
00C6 C60000     F                      LD     A,RxBuffer + 04H
00C9 97                                LD     XL,A
00CA 4F                                CLR    A
00CB 02                                RLWA   X,A
00CC 89                                PUSHW  X
00CD 5F                                CLRW   X
00CE C60000     F                      LD     A,RxBuffer + 03H
00D1 97                                LD     XL,A
00D2 9085                              POPW   Y
00D4 90BF02     F                      LDW    ?BH.w,Y
00D7 72BB0002   F                      ADDW   X,?BH.w
00DB BF03       F                      LDW    ?CH,X
00DD 5F                                CLRW   X
00DE BF03       F                      LDW    ?BH,X
00E0 A608       F                      LD     A,#008H
00E2 CD0000     F                      CALL   ?C?mv4_bc2isa
              ; SOURCE LINE # 124 
00E5 1E0B       F                      LDW    X,(00BH,SP)   ; [ t1 + 02H ]
00E7 89                                PUSHW  X
00E8 1E0B       F                      LDW    X,(00BH,SP)   ; [ t1 ]
00EA 89                                PUSHW  X
00EB 85                                POPW   X
00EC 1F03       F                      LDW    (003H,SP),X   ; [ t3 ]
00EE 85                                POPW   X
00EF 1F03       F                      LDW    (003H,SP),X   ; [ t3 + 02H ]
              ; SOURCE LINE # 125 
00F1 AE0C26                            LDW    X,#00C26H
00F4 89                                PUSHW  X
00F5 5F                                CLRW   X
00F6 89                                PUSHW  X
00F7 AE1000                            LDW    X,#01000H
00FA 89                                PUSHW  X
00FB 5F                                CLRW   X
00FC 89                                PUSHW  X
00FD 96           DNF                  LDW    X,SP
00FE 1C0011     F                      ADDW   X,#00011H
0101 CD0000     F DNF                  CALL   ?C?muluix32
0104 CD0000     F DNF                  CALL   ?C?divu3232
0107 A604       F                      LD     A,#004H
0109 CD0000     F                      CALL   ?C?mv4_bc2isa
              ; SOURCE LINE # 126 
010C CD0000     F DNF            M(07)  CALL  ?C?mv4_pg2bc
010F         ?DATASTART_0001:
010F 00                             M  DB     000H
0110 00                             M  DB     000H
0111 0F                             M  DB     00FH
0112 FF                             M  DB     0FFH
0113         ?DATAEND_0001:
0113 96           DNF                  LDW    X,SP
0114 1C0005     F                      ADDW   X,#00005H
0117 CD0000     F                      CALL   ?C?cpu3232ix
011A 2423                              JRUGE  ?ELSE_0005
              ; SOURCE LINE # 128 
011C AE0000                            LDW    X,#00000H
011F 1F05       F                      LDW    (005H,SP),X   ; [ t2 ]
0121 AE0FFF                            LDW    X,#00FFFH
0124 1F07       F                      LDW    (007H,SP),X   ; [ t2 + 02H ]
              ; SOURCE LINE # 129 
0126 AE0C26                            LDW    X,#00C26H
0129 89                                PUSHW  X
012A 5F                                CLRW   X
012B 89                                PUSHW  X
012C 96           DNF                  LDW    X,SP
012D 1C0009     F                      ADDW   X,#00009H
0130 CD0000     F DNF                  CALL   ?C?muluix32
0133 A60C                              LD     A,#00CH
0135 CD0000     F                      CALL   ?C?srl328
0138 A608       F                      LD     A,#008H
013A CD0000     F                      CALL   ?C?mv4_bc2isa
013D 200C                              JRA    ?NXT_0019
013F         ?ELSE_0005:
              ; SOURCE LINE # 131 
013F 1E03       F                      LDW    X,(003H,SP)   ; [ t3 + 02H ]
0141 89                                PUSHW  X
0142 1E03       F                      LDW    X,(003H,SP)   ; [ t3 ]
0144 89                                PUSHW  X
0145 85                                POPW   X
0146 1F0B       F                      LDW    (00BH,SP),X   ; [ t1 ]
0148 85                                POPW   X
0149 1F0B       F                      LDW    (00BH,SP),X   ; [ t1 + 02H ]
014B         ?NXT_0019:
              ; SOURCE LINE # 132 
014B 7B0C       F                      LD     A,(00CH,SP)   ; [ t1 + 03H ]
014D B700       F                      LD     EEbuffer,A
              ; SOURCE LINE # 133 
014F A608       F                      LD     A,#008H
0151 CD0000     F DNF                  CALL   ?C?mv4_isa2bc
0154 A608                              LD     A,#008H
0156 CD0000     F                      CALL   ?C?srl328
0159 450600     F                      MOV    EEbuffer + 01H,?CL
              ; SOURCE LINE # 134 
015C 5500000000 F                      MOV    EEbuffer + 02H,RxBuffer + 05H
              ; SOURCE LINE # 135 
0161 5500000000 F                      MOV    EEbuffer + 03H,RxBuffer + 06H
              ; SOURCE LINE # 136 
0166 CD0000     F                      CALL   ?ee_pgm
              ; SOURCE LINE # 137 
0169 CD0000     F                      CALL   ?readparameters
              ; SOURCE LINE # 138 
016C CD0000     F                      CALL   ?setWKUP
              ; SOURCE LINE # 139 
016F BE00       F                      LDW    X,Voltage
0171 CD0000     F                      CALL   ?updateDAC
              ; SOURCE LINE # 141 
0174 BE00       F                      LDW    X,Mtime
0176 CD0000     F                      CALL   ?updTime
              ; SOURCE LINE # 142 
0179 CD0000     F                      CALL   ?sendOKresponse
              ; SOURCE LINE # 143 
017C CC0000     F                      JP     ?NXT_0018
              ; t1           unsigned long  (size=4-Alg). Automatic variable  in AUTO
              ; t2           unsigned long  (size=4-Alg). Automatic variable  in AUTO
              ; t3           unsigned long  (size=4-Alg). Automatic variable  in AUTO
017F         ?CASE_0006:
              ; SOURCE LINE # 147 
017F 5500000000 F                      MOV    TxBuffer + 03H,PulseNL + 03H
              ; SOURCE LINE # 148 
0184 AE0000     F                      LDW    X,#PulseNL
0187 CD0000     F                      CALL   ?C?mv4_ix2bc
018A A608                              LD     A,#008H
018C CD0000     F                      CALL   ?C?srl328
018F 5500060000 F                      MOV    TxBuffer + 04H,?CL
              ; SOURCE LINE # 149 
0194 AE0000     F                      LDW    X,#PulseNL
0197 CD0000     F                      CALL   ?C?mv4_ix2bc
019A A610                              LD     A,#010H
019C CD0000     F                      CALL   ?C?srl328
019F 5500060000 F                      MOV    TxBuffer + 05H,?CL
              ; SOURCE LINE # 150 
01A4 AE0000     F                      LDW    X,#PulseNL
01A7 CD0000     F                      CALL   ?C?mv4_ix2bc
01AA A618                              LD     A,#018H
01AC CD0000     F                      CALL   ?C?srl328
01AF 5500060000 F                      MOV    TxBuffer + 06H,?CL
              ; SOURCE LINE # 151 
01B4 5500000000 F                      MOV    TxBuffer + 07H,PulseNH + 03H
              ; SOURCE LINE # 152 
01B9 AE0000     F                      LDW    X,#PulseNH
01BC CD0000     F                      CALL   ?C?mv4_ix2bc
01BF A608                              LD     A,#008H
01C1 CD0000     F                      CALL   ?C?srl328
01C4 5500060000 F                      MOV    TxBuffer + 08H,?CL
              ; SOURCE LINE # 153 
01C9 AE0000     F                      LDW    X,#PulseNH
01CC CD0000     F                      CALL   ?C?mv4_ix2bc
01CF A610                              LD     A,#010H
01D1 CD0000     F                      CALL   ?C?srl328
01D4 5500060000 F                      MOV    TxBuffer + 09H,?CL
              ; SOURCE LINE # 154 
01D9 AE0000     F                      LDW    X,#PulseNH
01DC CD0000     F                      CALL   ?C?mv4_ix2bc
01DF A618                              LD     A,#018H
01E1 CD0000     F                      CALL   ?C?srl328
01E4 5500060000 F                      MOV    TxBuffer + 0AH,?CL
              ; SOURCE LINE # 155 
01E9 A60B                              LD     A,#00BH
01EB CD0000     F                      CALL   ?sendpacket
              ; SOURCE LINE # 156 
01EE 2036                              JRA    ?NXT_0018
01F0         ?CASE_0007:
              ; SOURCE LINE # 160 
01F0 CD0000     F                      CALL   ?ee_read
              ; SOURCE LINE # 161 
01F3 5500000000 F                      MOV    EEbuffer + 04H,RxBuffer + 03H
              ; SOURCE LINE # 162 
01F8 5500000000 F                      MOV    EEbuffer + 05H,RxBuffer + 04H
              ; SOURCE LINE # 163 
01FD 5500000000 F                      MOV    EEbuffer + 06H,RxBuffer + 05H
              ; SOURCE LINE # 164 
0202 5500000000 F                      MOV    EEbuffer + 07H,RxBuffer + 06H
              ; SOURCE LINE # 165 
0207 5500000000 F                      MOV    EEbuffer + 08H,RxBuffer + 07H
              ; SOURCE LINE # 166 
020C 5500000000 F                      MOV    EEbuffer + 09H,RxBuffer + 08H
              ; SOURCE LINE # 167 
0211 5500000000 F                      MOV    EEbuffer + 0AH,RxBuffer + 09H
              ; SOURCE LINE # 168 
0216 5500000000 F                      MOV    EEbuffer + 0BH,RxBuffer + 0AH
              ; SOURCE LINE # 169 
021B CD0000     F                      CALL   ?ee_pgm
              ; SOURCE LINE # 170 
021E CD0000     F                      CALL   ?readparameters
              ; SOURCE LINE # 174 
0221 CD0000     F                      CALL   ?sendOKresponse
              ; SOURCE LINE # 175 
0224 2000                              JRA    ?NXT_0018
0226         ?NXT_0018:
              ; SOURCE LINE # 182 
0226 CD0000     F                      CALL   ?clearRxBuff
0229         ?EPILOG_0003:
0229 5B0C                              ADD    SP,#00CH
022B 81                                RET    

              ; FUNCTION ?handlecommand (END)

              ; FUNCTION ?sendpacket (BEGIN)
              ; Register-parameter txcount (A) is relocated (auto)
              ; SOURCE LINE # 187 
0000 88                                PUSH   A
              ; SOURCE LINE # 189 
0001 353E0000   F                      MOV    TxBuffer,#03EH
              ; SOURCE LINE # 190 
0005 5500000000 F                      MOV    TxBuffer + 01H,NetAddr
              ; SOURCE LINE # 191 
000A 5500000000 F                      MOV    TxBuffer + 02H,Command
              ; SOURCE LINE # 193 
000F 7B01       F                      LD     A,(001H,SP)   ; [ txcount ]
0011 CD0000     F                      CALL   ?compCRC
              ; SOURCE LINE # 194 
0014 5F                                CLRW   X
0015 7B01       F                      LD     A,(001H,SP)   ; [ txcount ]
0017 97                                LD     XL,A
0018 B600       F                      LD     A,TxCRC
001A D70000     F                      LD     (TxBuffer + 00H,X),A
              ; SOURCE LINE # 195 
001D 35000000   F                      MOV    RxPointer,#000H
              ; SOURCE LINE # 196 
0021 7B01       F                      LD     A,(001H,SP)   ; [ txcount ]
0023 CD0000     F                      CALL   ?putpack
              ; SOURCE LINE # 197 
0026 CD0000     F                      CALL   ?clearRxBuff
0029         ?EPILOG_0004:
0029 84                                POP    A
002A 81                                RET    
              ; txcount      unsigned char  (size=1).  parameter in AUTO

              ; FUNCTION ?sendpacket (END)

              ; FUNCTION ?sendOKresponse (BEGIN)
              ; SOURCE LINE # 201 
0000 35000000   F                      MOV    TxBuffer + 03H,#000H
              ; SOURCE LINE # 202 
0004 A604                              LD     A,#004H
0006 CD0000     F                      CALL   ?sendpacket
0009         ?EPILOG_0005:
0009 81                                RET    

              ; FUNCTION ?sendOKresponse (END)

              ; FUNCTION ?sendERRresponse (BEGIN)
              ; SOURCE LINE # 207 
0000 35010000   F                      MOV    TxBuffer + 03H,#001H
              ; SOURCE LINE # 208 
0004 A604                              LD     A,#004H
0006 CD0000     F                      CALL   ?sendpacket
0009         ?EPILOG_0006:
0009 81                                RET    

              ; FUNCTION ?sendERRresponse (END)

RCSTM8 COMPILER V2.28.10.092
NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====

PA_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005000H 1      
PA_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005001H 1      
PA_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005002H 1      
PA_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005003H 1      
PA_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005004H 1      
PB_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005005H 1      
PB_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005006H 1      
PB_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005007H 1      
PB_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005008H 1      
PB_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005009H 1      
PC_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500AH 1      
PC_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500BH 1      
PC_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500CH 1      
PC_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500DH 1      
PC_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500EH 1      
PD_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00500FH 1      
PD_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005010H 1      
PD_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005011H 1      
PD_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005012H 1      
PD_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005013H 1      
PE_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005014H 1      
PE_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005015H 1      
PE_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005016H 1      
PE_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005017H 1      
PE_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005018H 1      
PF_ODR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005019H 1      
PF_IDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501AH 1      
PF_DDR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501BH 1      
PF_CR1 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501CH 1      
PF_CR2 . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00501DH 1      
FLASH_CR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005050H 1      
FLASH_CR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005051H 1      
FLASH_PUKR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005052H 1      
FLASH_DUKR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005053H 1      
FLASH_IAPSR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005054H 1      
DMA1_GCSR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005070H 1      
DMA1_GIR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005071H 1      
DMA1_C0CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005075H 1      
DMA1_C0SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005076H 1      
DMA1_C0NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005077H 1      
DMA1_C0PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005078H 2      
DMA1_C0PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005078H 1      
DMA1_C0PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005079H 1      
DMA1_C0M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00507BH 2      
DMA1_C0M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507BH 1      
DMA1_C0M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507CH 1      
DMA1_C1CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00507FH 1      
DMA1_C1SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005080H 1      
DMA1_C1NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005081H 1      
DMA1_C1PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005082H 2      
DMA1_C1PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005082H 1      
DMA1_C1PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005083H 1      
DMA1_C1M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005085H 2      
DMA1_C1M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005085H 1      
DMA1_C1M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005086H 1      
DMA1_C2CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005089H 1      
DMA1_C2SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508AH 1      
DMA1_C2NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508BH 1      
DMA1_C2PAR . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00508CH 2      
DMA1_C2PARH. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508CH 1      
DMA1_C2PARL. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508DH 1      
DMA1_C2M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00508FH 2      
DMA1_C2M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00508FH 1      
DMA1_C2M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005090H 1      
DMA1_C3CR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005093H 1      
DMA1_C3SPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005094H 1      
DMA1_C3NDTR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005095H 1      
DMA1_C3PAR_C3M1AR. . . . . . . . . . .  HREG16   hreg16  U_INT   005096H 2      
DMA1_C3PARH_C3M1ARH. . . . . . . . . .  HREG     hreg    U_CHAR  005096H 1      
DMA1_C3PARL_C3M1ARL. . . . . . . . . .  HREG     hreg    U_CHAR  005097H 1      
DMA1_C3M0AR. . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005099H 2      
DMA1_C3M0ARH . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005099H 1      
DMA1_C3M0ARL . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509AH 1      
SYSCFG_RMPCR1. . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509EH 1      
SYSCFG_RMPCR2. . . . . . . . . . . . .  HREG     hreg    U_CHAR  00509FH 1      
EXTI_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A0H 1      
EXTI_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A1H 1      
EXTI_CR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A2H 1      
EXTI_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A3H 1      
EXTI_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A4H 1      
EXTI_CONF. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A5H 1      
WFE_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A6H 1      
WFE_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A7H 1      
WFE_CR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050A8H 1      
RST_CR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B0H 1      
RST_SR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B1H 1      
PWR_CSR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B2H 1      
PWR_CSR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050B3H 1      
CLK_CKDIVR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C0H 1      
CLK_CRTCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C1H 1      
CLK_ICKCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C2H 1      
CLK_PCKENR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C3H 1      
CLK_PCKENR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C4H 1      
CLK_CCOR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C5H 1      
CLK_ECKCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C6H 1      
CLK_SCSR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C7H 1      
CLK_SWR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C8H 1      
CLK_SWCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050C9H 1      
CLK_CSSR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CAH 1      
CLK_CBEEPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CBH 1      
CLK_HSICALR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CCH 1      
CLK_HSITRIMR . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CDH 1      
CLK_HSIUNLCKR. . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CEH 1      
CLK_REGCSR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050CFH 1      
WWDG_CR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050D3H 1      
WWDG_WR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050D4H 1      
IWDG_KR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E0H 1      
IWDG_PR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E1H 1      
IWDG_RLR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050E2H 1      
BEEP_CSR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050F0H 1      
BEEP_CSR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0050F3H 1      
RTC_TR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005140H 1      
RTC_TR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005141H 1      
RTC_TR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005142H 1      
RTC_DR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005144H 1      
RTC_DR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005145H 1      
RTC_DR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005146H 1      
RTC_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005148H 1      
RTC_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005149H 1      
RTC_CR3. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514AH 1      
RTC_ISR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514CH 1      
RTC_ISR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00514DH 1      
RTC_SPRER. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005150H 2      
RTC_SPRERH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005150H 1      
RTC_SPRERL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005151H 1      
RTC_APRER. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005152H 1      
RTC_WUTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005154H 2      
RTC_WUTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005154H 1      
RTC_WUTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005155H 1      
RTC_WPR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005159H 1      
RTC_ALRMAR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515CH 1      
RTC_ALRMAR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515DH 1      
RTC_ALRMAR3. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515EH 1      
RTC_ALRMAR4. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00515FH 1      
SPI1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005200H 1      
SPI1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005201H 1      
SPI1_ICR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005202H 1      
SPI1_SR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005203H 1      
SPI1_DR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005204H 1      
SPI1_CRCPR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005205H 1      
SPI1_RXCRCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005206H 1      
SPI1_TXCRCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005207H 1      
I2C1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005210H 1      
I2C1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005211H 1      
I2C1_FREQR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005212H 1      
I2C1_OARL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005213H 1      
I2C1_OARH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005214H 1      
I2C1_DR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005216H 1      
I2C1_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005217H 1      
I2C1_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005218H 1      
I2C1_SR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005219H 1      
I2C1_ITR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521AH 1      
I2C1_CCRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521BH 1      
I2C1_CCRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521CH 1      
I2C1_TRISER. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521DH 1      
I2C1_PECR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00521EH 1      
USART1_SR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005230H 1      
USART1_DR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005231H 1      
USART1_BRR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005232H 1      
USART1_BRR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005233H 1      
USART1_CR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005234H 1      
USART1_CR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005235H 1      
USART1_CR3 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005236H 1      
USART1_CR4 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005237H 1      
USART1_CR5 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005238H 1      
USART1_GTR . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005239H 1      
USART1_PSCR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00523AH 1      
TIM2_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005250H 1      
TIM2_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005251H 1      
TIM2_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005252H 1      
TIM2_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005253H 1      
TIM2_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005254H 1      
TIM2_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005255H 1      
TIM2_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005256H 1      
TIM2_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005257H 1      
TIM2_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005258H 1      
TIM2_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005259H 1      
TIM2_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525AH 1      
TIM2_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525BH 1      
TIM2_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00525CH 2      
TIM2_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525CH 1      
TIM2_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525DH 1      
TIM2_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525EH 1      
TIM2_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00525FH 2      
TIM2_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00525FH 1      
TIM2_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005260H 1      
TIM2_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005261H 2      
TIM2_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005261H 1      
TIM2_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005262H 1      
TIM2_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005263H 2      
TIM2_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005263H 1      
TIM2_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005264H 1      
TIM2_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005265H 1      
TIM2_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005266H 1      
TIM3_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005280H 1      
TIM3_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005281H 1      
TIM3_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005282H 1      
TIM3_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005283H 1      
TIM3_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005284H 1      
TIM3_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005285H 1      
TIM3_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005286H 1      
TIM3_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005287H 1      
TIM3_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005288H 1      
TIM3_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005289H 1      
TIM3_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528AH 1      
TIM3_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528BH 1      
TIM3_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00528CH 2      
TIM3_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528CH 1      
TIM3_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528DH 1      
TIM3_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528EH 1      
TIM3_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00528FH 2      
TIM3_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00528FH 1      
TIM3_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005290H 1      
TIM3_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005291H 2      
TIM3_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005291H 1      
TIM3_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005292H 1      
TIM3_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005293H 2      
TIM3_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005293H 1      
TIM3_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005294H 1      
TIM3_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005295H 1      
TIM3_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005296H 1      
TIM1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B0H 1      
TIM1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B1H 1      
TIM1_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B2H 1      
TIM1_ETR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B3H 1      
TIM1_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B4H 1      
TIM1_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B5H 1      
TIM1_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B6H 1      
TIM1_SR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B7H 1      
TIM1_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B8H 1      
TIM1_CCMR1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052B9H 1      
TIM1_CCMR2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BAH 1      
TIM1_CCMR3 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BBH 1      
TIM1_CCMR4 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BCH 1      
TIM1_CCER1 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BDH 1      
TIM1_CCER2 . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BEH 1      
TIM1_CNTR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052BFH 2      
TIM1_CNTRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052BFH 1      
TIM1_CNTRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C0H 1      
TIM1_PSCR. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C1H 2      
TIM1_PSCRH . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C1H 1      
TIM1_PSCRL . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C2H 1      
TIM1_ARR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C3H 2      
TIM1_ARRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C3H 1      
TIM1_ARRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C4H 1      
TIM1_RCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C5H 1      
TIM1_CCR1. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C6H 2      
TIM1_CCR1H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C6H 1      
TIM1_CCR1L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C7H 1      
TIM1_CCR2. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052C8H 2      
TIM1_CCR2H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C8H 1      
TIM1_CCR2L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052C9H 1      
TIM1_CCR3. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052CAH 2      
TIM1_CCR3H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CAH 1      
TIM1_CCR3L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CBH 1      
TIM1_CCR4. . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0052CCH 2      
TIM1_CCR4H . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CCH 1      
TIM1_CCR4L . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CDH 1      
TIM1_BKR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CEH 1      
TIM1_DTR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052CFH 1      
TIM1_OISR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D0H 1      
TIM1_DCR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D1H 1      
TIM1_DCR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D2H 1      
TIM1_DMAR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052D3H 1      
TIM4_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E0H 1      
TIM4_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E1H 1      
TIM4_SMCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E2H 1      
TIM4_DER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E3H 1      
TIM4_IER . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E4H 1      
TIM4_SR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E5H 1      
TIM4_EGR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E6H 1      
TIM4_CNTR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E7H 1      
TIM4_PSCR. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E8H 1      
TIM4_ARR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052E9H 1      
IR_CR. . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0052FFH 1      
ADC1_CR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005340H 1      
ADC1_CR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005341H 1      
ADC1_CR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005342H 1      
ADC1_SR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005343H 1      
ADC1_DR. . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005344H 2      
ADC1_DRH . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005344H 1      
ADC1_DRL . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005345H 1      
ADC1_HTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005346H 2      
ADC1_HTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005346H 1      
ADC1_HTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005347H 1      
ADC1_LTR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005348H 2      
ADC1_LTRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005348H 1      
ADC1_LTRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005349H 1      
ADC1_SQR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534AH 1      
ADC1_SQR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534BH 1      
ADC1_SQR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534CH 1      
ADC1_SQR4. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534DH 1      
ADC1_TRIGR1. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534EH 1      
ADC1_TRIGR2. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00534FH 1      
ADC1_TRIGR3. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005350H 1      
ADC1_TRIGR4. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005351H 1      
DAC_CR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005380H 1      
DAC_CR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005381H 1      
DAC_SWTRIGR. . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005384H 1      
DAC_SR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005385H 1      
DAC_RDHR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   005388H 2      
DAC_RDHRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005388H 1      
DAC_RDHRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005389H 1      
DAC_LDHR . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   00538CH 2      
DAC_LDHRH. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00538CH 1      
DAC_LDHRL. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00538DH 1      
DAC_DHR8 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005390H 1      
DAC_DOR. . . . . . . . . . . . . . . .  HREG16   hreg16  U_INT   0053ACH 2      
DAC_DORH . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0053ACH 1      
DAC_DORL . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  0053ADH 1      
RI_ICR1. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005431H 1      
RI_ICR2. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005432H 1      
RI_IOIR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005433H 1      
RI_IOIR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005434H 1      
RI_IOIR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005435H 1      
RI_IOCMR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005436H 1      
RI_IOCMR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005437H 1      
RI_IOCMR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005438H 1      
RI_IOSR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005439H 1      
RI_IOSR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543AH 1      
RI_IOSR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543BH 1      
RI_IOGCR . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543CH 1      
RI_ASCR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543DH 1      
RI_ASCR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543EH 1      
RI_RCR . . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  00543FH 1      
COMP_CSR1. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005440H 1      
COMP_CSR2. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005441H 1      
COMP_CSR3. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005442H 1      
COMP_CSR4. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005443H 1      
COMP_CSR5. . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  005444H 1      
CFG_GCR. . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F60H 1      
ITC_SPR1 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F70H 1      
ITC_SPR2 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F71H 1      
ITC_SPR3 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F72H 1      
ITC_SPR4 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F73H 1      
ITC_SPR5 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F74H 1      
ITC_SPR6 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F75H 1      
ITC_SPR7 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F76H 1      
ITC_SPR8 . . . . . . . . . . . . . . .  HREG     hreg    U_CHAR  007F77H 1      
_fctptr_t. . . . . . . . . . . . . . .  TYPEDEF ------- PTR   -------      2
_halt_ . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_jmp_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_nop_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_rim_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_sim_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_trap_ . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_wfe_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_wfi_. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_getCC_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_setCC_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_getSP_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_setSP_. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_swapbyte_ . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
_swapnibble_ . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
size_t . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     2
fmemcpy. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
lstrlen. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
lmemcpy. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
lmemset. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memccpy. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memchr . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memcmp . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memcpy . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memmove. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
memset . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strcat . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strchr . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strcmp . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strcpy . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strcspn. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strlen . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strncat. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strncmp. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strncpy. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strpbrk. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strpos . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strrchr. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strrpos. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strspn . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strstr . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strtok . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strxfrm. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
DWORD. . . . . . . . . . . . . . . . .  TYPEDEF ------- ????? -------      4
WORD . . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     2
BYTE . . . . . . . . . . . . . . . . .  TYPEDEF ------- U_CHAR  -------     1
delay. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
setWKUP. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
Voltage. . . . . . . . . . . . . . . .  EXTERN  page0   U_INT   ------- -----
Mtime. . . . . . . . . . . . . . . . .  EXTERN  page0   U_INT   ------- -----
PulseNL. . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
PulseNH. . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
PulseCount . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
Imeas. . . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
Pulse. . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
checkpacket. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
handlecommand. . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CRC. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
TxCRC. . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxCRC. . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
F_Comm . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
Command. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
NetAddr. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
COMMANDLIST. . . . . . . . . . . . . .  EXTERN  code    ARRAY   ------- -----
initUART . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
putpack. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
clearRxBuff. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
RxBuffer . . . . . . . . . . . . . . .  EXTERN  data    ARRAY   ------- -----
TxBuffer . . . . . . . . . . . . . . .  EXTERN  data    ARRAY   ------- -----
Comm_Len . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxStatus . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxCount. . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
plen . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
TxCount. . . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
TxPointer. . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
RxPointer. . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
TxBusy . . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
initTIM2 . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updateTim2 . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
initTIM3 . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updateTIM3 . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
sendpulse. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
Tim2Flag . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
Tim3Flag . . . . . . . . . . . . . . .  EXTERN  bit     BIT     ------- -----
Tim2Counter. . . . . . . . . . . . . .  EXTERN  page0   U_INT   ------- -----
PARAMS . . . . . . . . . . . . . . . .  EXTERN  eeprom  ARRAY   ------- -----
PASSWORD . . . . . . . . . . . . . . .  EXTERN  
EEbuffer . . . . . . . . . . . . . . .  EXTERN  page0   ARRAY   ------- -----
ee_read. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
ee_pgm . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
readparameters . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
initIO . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
blink. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
LED_set. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
DE_set . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
Pulse_Set. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CheckCmp . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
initDAC. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updateDAC. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
itoa . . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
dwtoa. . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
reverse. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
initLCD. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
lcdprint . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
lcdprintstr. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
cls. . . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updateLCD. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updTime. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updVolt. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updCnt . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updCurr. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
strbuff. . . . . . . . . . . . . . . .  EXTERN  page0   ARRAY   ------- -----
compCRC. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
comp_crc . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
checkpacket. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
handlecommand. . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
sendpacket . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
sendOKresponse . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
sendERRresponse. . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
CRC. . . . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000000H 1      
TxCRC. . . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000001H 1      
RxCRC. . . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000002H 1      
F_Comm . . . . . . . . . . . . . . . .  PUBLIC  bit     BIT     000000H 1      
Command. . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000003H 1      
NetAddr. . . . . . . . . . . . . . . .  PUBLIC  page0   U_CHAR  000000H 1      
TuneMode . . . . . . . . . . . . . . .  PUBLIC  bit     BIT     000001H 1      
F_Comm . . . . . . . . . . . . . . . .  PUBLIC  bit     BIT     000000H 1      
Lister . . . . . . . . . . . . . . . .  PUBLIC  bit     BIT     000002H 1      
COMMANDLIST. . . . . . . . . . . . . .  PUBLIC  code    ARRAY   000000H 12     
  i?198. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
compCRC. . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 crcCount?197. . . . . . . . . . . . .  PARAM    auto    U_CHAR  000001H 1      
  i?198. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
  j?200. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
comp_crc . . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 b?199 . . . . . . . . . . . . . . . .  PARAM    auto    U_CHAR  000001H 1      
  j?200. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
  i?202. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
checkpacket. . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 packlen?201 . . . . . . . . . . . . .  PARAM    auto    U_CHAR  000001H 1      
  i?202. . . . . . . . . . . . . . . .  PUBLIC  auto    U_CHAR  000000H 1      
  t1?205 . . . . . . . . . . . . . . .  PUBLIC  auto     BASE    000000H 4      
  t2?206 . . . . . . . . . . . . . . .  PUBLIC  auto     BASE    000000H 4      
  t3?207 . . . . . . . . . . . . . . .  PUBLIC  auto     BASE    000000H 4      
handlecommand. . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
  t1?205 . . . . . . . . . . . . . . .  PUBLIC  auto     BASE    000008H 4      
  t2?206 . . . . . . . . . . . . . . .  PUBLIC  auto     BASE    000004H 4      
  t3?207 . . . . . . . . . . . . . . .  PUBLIC  auto     BASE    000000H 4      
sendpacket . . . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
 txcount?208 . . . . . . . . . . . . .  PARAM    auto    U_CHAR  000000H 1      
sendOKresponse . . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
sendERRresponse. . . . . . . . . . . .  PUBLIC  CODE    PROC    ------- -----
TxBuffer . . . . . . . . . . . . . . .  EXTERN  data    ARRAY   ------- -----
?BH. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
?CH. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
?CL. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
?BL. . . . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
RxBuffer . . . . . . . . . . . . . . .  EXTERN  data    ARRAY   ------- -----
clearRxBuff. . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
RxStatus . . . . . . . . . . . . . . .  EXTERN  page0   U_CHAR  ------- -----
PulseCount . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
Imeas. . . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
Voltage. . . . . . . . . . . . . . . .  EXTERN  page0   U_INT   ------- -----
Mtime. . . . . . . . . . . . . . . . .  EXTERN  page0   U_INT   ------- -----
EEbuffer . . . . . . . . . . . . . . .  EXTERN  page0   ARRAY   ------- -----
PulseNL. . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
PulseNH. . . . . . . . . . . . . . . .  EXTERN  page0    BASE    ------- -----
ee_read. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
ee_pgm . . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
readparameters . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
setWKUP. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updateDAC. . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
updTime. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
RxPointer. . . . . . . . . . . . . . .  EXTERN  data    U_CHAR  ------- -----
putpack. . . . . . . . . . . . . . . .  EXTERN  CODE    PROC    ------- -----
RCSTM8 COMPILER V2.28.10.092


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    821    ----
   CONSTANT SIZE    =     13    ----
   DATA SIZE        =   ----    ----
   PAGE0 SIZE       =      5    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.

RCSTM8 COMPILATION COMPLETE.  0 WARNING,  0 ERROR
